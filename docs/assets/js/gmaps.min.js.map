{"version":3,"sources":["webpack://GMaps/webpack/bootstrap","webpack://GMaps/./lib/core.js","webpack://GMaps/(webpack)/buildin/global.js","webpack://GMaps/./lib/events.js","webpack://GMaps/./lib/polyfills.js","webpack://GMaps/./lib/controls.js","webpack://GMaps/./lib/overlays.js","webpack://GMaps/./node_modules/events/events.js","webpack://GMaps/./lib/static.js","webpack://GMaps/./lib/streetview.js","webpack://GMaps/./lib/utils.js","webpack://GMaps/./lib/geofences.js","webpack://GMaps/./lib/markers.js","webpack://GMaps/./lib/geometry.js","webpack://GMaps/./lib/layers.js","webpack://GMaps/./lib/routes.js","webpack://GMaps/./lib/map_types.js","webpack://GMaps/./lib/styles.js","webpack://GMaps/./lib/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","latLngFromArguments","arguments","length","undefined","google","maps","LatLng","flattenArray","array","reduce","collection","item","concat","arrayToLatLng","coordinates","useGeoJSON","map","coordinate","_typeof","firstCoordinate","secondCoordinate","coordsToLatLngs","getElementById","id","context","sanitizedId","replace","global","$","document","getElement","selectorOrElement","match","className","sanitizedClassName","getElementsByClassName","setupEventListener","_ref","eventName","instance","handler","event","addListener","hideContextMenu","setupEvents","_ref2","events","handlers","forEach","MAP_EVENTS","GMAPS_MENU_ID","GMaps","_this","this","baseOptions","_classCallCheck","window","Error","div","_baseOptions$el","el","_baseOptions$element","element","lat","_baseOptions$latitude","latitude","lng","_baseOptions$longitud","longitude","_baseOptions$center","center","_baseOptions$zoom","zoom","_baseOptions$mapType","mapType","_baseOptions$zoomCont","zoomControlOpt","style","position","_baseOptions$panContr","panControl","_baseOptions$zoomCont2","zoomControl","_baseOptions$mapTypeC","mapTypeControl","_baseOptions$scaleCon","scaleControl","_baseOptions$streetVi","streetViewControl","_baseOptions$overview","overviewMapControl","width","height","markerClusterer","enableNewStyle","options","_objectWithoutProperties","mapBaseOptions","mapTypeId","MapTypeId","toUpperCase","mapControlsOptions","zoomControlOptions","ZoomControlStyle","ControlPosition","filteredOptions","keys","hash","includes","_objectSpread","_defineProperty","Math","ceil","random","Date","now","contextMenus","visualRefresh","scrollWidth","offsetWidth","scrollHeight","offsetHeight","mapOptions","Map","controls","overlays","layers","singleLayers","markers","polylines","routes","polygons","infoWindow","overlayElement","registeredEvents","apply","rightclick","buildContextMenu","control","_this2","contextMenuElement","html","title","join","innerHTML","_toConsumableArray","getElementsByTagName","contextMenuItem","clearListeners","addDomListenerOnce","contextMenuItemListenerEvent","preventDefault","target","action","left","top","getBoundingClientRect","rectangle","x","scrollX","pageXOffset","y","scrollY","pageYOffset","offsetParent","iterator","offsetLeft","offsetTop","findAbsolutePosition","pixel","_this3","overlay","OverlayView","setMap","draw","projection","getProjection","marker","getPosition","fromLatLngToContainerPixel","buildContextMenuHTML","setTimeout","display","_this4","option","createElement","minWidth","background","listStyle","padding","boxShadow","body","appendChild","addDomListener","relatedTarget","contains","trigger","latLngs","bounds","LatLngBounds","latLng","extend","fitBounds","filter","visible","fitLatLngBounds","_len","args","Array","_key","callback","slice","pop","panTo","magnitude","getZoom","setZoom","methodName","_len2","_key2","g","Function","e","customEvents","on","indexOf","registeredEvent","push","off","once","addListenerOnce","fire","eventArguments","Polygon","getBounds","path","paths","getPaths","getLength","getAt","containsLatLng","inPoly","numPaths","numPoints","j","vertex1","vertex2","Circle","geometry","spherical","computeDistanceBetween","getCenter","getRadius","Rectangle","Marker","setFences","fences","addFence","fence","getId","searchElement","TypeError","len","Number","Infinity","floor","abs","k","max","addControl","_ref$style","classes","content","_ref$events","disableDefaultStyles","cursor","fontFamily","fontSize","HTMLElement","index","createControl","removeControl","controlIndex","splice","controlsForPosition","controlIndexInCollection","removeAt","STOP_PROPAGATION_EVENTS","drawOverlay","self","_baseOptions$autoShow","autoShow","_baseOptions$position","_baseOptions$layer","layer","_baseOptions$horizont","horizontalOffset","_baseOptions$vertical","verticalOffset","verticalAlign","horizontalAlign","onAdd","borderStyle","borderWidth","zIndex","panes","getPanes","navigator","userAgent","toLowerCase","all","cancelBubble","returnValue","stopPropagation","click","overlayMouseTarget","fromLatLngToDivPixel","children","contentHeight","clientHeight","contentWidth","clientWidth","show","onRemove","remove","parentNode","removeChild","removeOverlay","overlayIndex","removeOverlays","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","isNaN","EventEmitter","init","_events","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","type","listener","prepend","existing","warning","newListener","emit","unshift","warned","w","String","emitter","count","console","warn","_onceWrap","state","fired","wrapFn","wrapped","removeListener","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","set","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","err","message","listeners","prependListener","prependOnceListener","list","originalListener","shift","spliceOne","removeAllListeners","rawListeners","eventNames","parseColor","color","opacity","parsedColor","min","parseFloat","toString","toImage","_options$size","size","_options$zoom","staticMapOptions","polyline","encoding","encodePath","getPath","strokeColor","strokeOpacity","strokeWeight","staticMapURL","url","address","_baseOptions$markers","styles","_baseOptions$size","defaultRoot","location","protocol","root","parameters","encodeURI","styleParameters","featureType","elementType","stylers","styler","buildStyleParameters","markerParameters","_marker$latitude","_marker$longitude","icon","label","markerOptions","buildMarkerParameters","polylineParameters","parseInt","fillColor","fillOpacity","buildPathParameters","dpi","devicePixelRatio","STREETVIEW_EVENTS","createPanorama","_baseOptions$lat","_baseOptions$lng","streetViewOptions","panorama","setStreetView","_baseOptions$latitude2","_baseOptions$longitud2","_baseOptions$instance","containerElement","StreetViewPanorama","geolocate","completeCallback","always","complete","geolocation","getCurrentPosition","success","not_supported","geocode","_baseOptions$location","geocoder","Geocoder","geocodeOptions","checkGeofence","lagLng","checkMarkerGeofence","outsideCallback","INFO_WINDOW_EVENTS","MARKER_EVENTS","MARKER_MOUSE_EVENTS","createMarker","details","outside","InfoWindow","fromLatLngToPoint","hideInfoWindows","open","addMarker","gm_accessors_","_options$latitude","_options$longitude","addMarkers","close","removeMarker","_options$fireEvent","fireEvent","markerIndex","removeMarkers","EVENTS","drawPolyline","icons","geodesic","_baseOptions$clickabl","clickable","_baseOptions$editable","editable","_baseOptions$visible","geometry_objectWithoutProperties","polylineOptions","geometry_objectSpread","Polyline","removePolyline","polylineIndex","removePolylines","drawCircle","_options$center","polygonOptions","polygon","drawRectangle","drawPolygon","_baseOptions$useGeoJS","basePaths","removePolygon","polygonIndex","removePolygons","getFromFusionTables","_baseOptions$events","layers_objectWithoutProperties","FusionTablesLayer","loadFromFusionTables","getFromKML","KmlLayer","loadFromKML","addLayer","layerName","search","nearbySearch","radarSearch","textSearch","keyword","radius","rankBy","types","query","TrafficLayer","traffic","TransitLayer","transit","BicyclingLayer","bicycling","places","PlacesService","placeSearchRequest","textSearchRequest","setOptions","removeLayer","layerIndex","getRoutes","origin","destination","_baseOptions$travelMo","travelMode","_baseOptions$unitSyst","unitSystem","_baseOptions$avoidHig","avoidHighways","_baseOptions$avoidTol","avoidTolls","_baseOptions$optimize","optimizeWaypoints","_baseOptions$waypoint","waypoints","requestOptions","routes_objectSpread","routes_objectWithoutProperties","TravelMode","DirectionsService","route","result","status","DirectionsStatus","OK","routes_toConsumableArray","removeRoutes","getElevations","_baseOptions$path","_baseOptions$samples","samples","locations","service","ElevationService","getElevationAlongPath","getElevationForLocations","cleanRoute","renderRoute","baseRenderOptions","panel","renderOptions","DirectionsRenderer","_","response","setDirections","drawRoute","lastRoute","overview_path","travelRoute","start","step","legs","steps","step_number","stepNumber","end","drawSteppedRoute","routeStep","stepsCount","Route","step_count","steps_length","MVCArray","addMapType","getTileUrl","_options$tileSize","tileSize","Size","ImageMapType","mapTypes","addOverlayMapType","getTile","_options$index","overlayMapTypes","overlayMapTypeOptions","map_types_objectWithoutProperties","insertAt","map_types_objectSpread","removeOverlayMapType","overlayMapType","addStyle","styledMapType","StyledMapType","styledMapName","setStyle","setMapTypeId"],"mappings":"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","file":"gmaps.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","export const latLngFromArguments = (...args) => {\n  if (typeof args[1] === 'number' && typeof args[1] === 'number') {\n    return new google.maps.LatLng(args[0], args[1]);\n  }\n\n  return args[0];\n};\n\nexport const flattenArray = array =>\n  array.reduce((collection, item) => collection.concat(item), []);\n\nexport const coordsToLatLngs = (coordinates, useGeoJSON) => {\n  const firstCoordinate = useGeoJSON ? coordinates[1] : coordinates[0];\n  const secondCoordinate = useGeoJSON ? coordinates[0] : coordinates[1];\n\n  return new google.maps.LatLng(firstCoordinate, secondCoordinate);\n};\n\nexport const arrayToLatLng = (coordinates, useGeoJSON) =>\n  coordinates.map((coordinate) => {\n    if (!(coordinate instanceof google.maps.LatLng)) {\n      if (coordinate.length && typeof coordinate[0] === 'object') {\n        return arrayToLatLng(coordinate, useGeoJSON);\n      }\n\n      return coordsToLatLngs(coordinate, useGeoJSON);\n    }\n\n    return coordinate;\n  });\n\nconst getElementsByClassName = (className, context) => {\n  const sanitizedClassName = className.replace(/^\\./, '');\n\n  if (typeof global.$ === 'function') {\n    return $(`.${sanitizedClassName}`, context)[0];\n  }\n\n  return global.document.getElementsByClassName(sanitizedClassName)[0];\n};\n\nexport const getElementById = (id, context) => {\n  const sanitizedId = id.replace(/^#/, '');\n\n  if (typeof global.$ === 'function') {\n    const elements = $(`#${sanitizedId}`, context) || [];\n\n    return elements[0];\n  }\n\n  return global.document.getElementById(sanitizedId);\n};\n\nconst getElement = (selectorOrElement, context) => {\n  if (typeof selectorOrElement === 'string') {\n    return selectorOrElement.match(/^#/) ? getElementById(selectorOrElement, context) : getElementsByClassName(selectorOrElement, context);\n  }\n\n  return selectorOrElement;\n};\n\nexport const findAbsolutePosition = (element) => {\n  let left = 0;\n  let top = 0;\n\n  if (element.getBoundingClientRect) {\n    const rectangle = element.getBoundingClientRect();\n    const x = -(window.scrollX ? window.scrollX : window.pageXOffset);\n    const y = -(window.scrollY ? window.scrollY : window.pageYOffset);\n\n    return [rectangle.left - x, rectangle.top - y];\n  }\n\n  if (element.offsetParent) {\n    let iterator = element;\n\n    do {\n      left += iterator.offsetLeft;\n      top += iterator.offsetTop;\n    } while ((iterator = iterator.offsetParent));\n  }\n\n  return [left, top];\n};\n\nexport const setupEventListener = ({ object, eventName, instance, handler, }) => {\n  google.maps.event.addListener(object, eventName, (event = instance) => {\n    handler.call(instance, event);\n\n    if (instance.hideContextMenu) {\n      instance.hideContextMenu();\n    }\n  });\n};\n\nexport const setupEvents = ({ events, object, instance, handlers, }) =>\n  events.forEach((eventName) => {\n    if (handlers[eventName]) {\n      setupEventListener({\n        object,\n        eventName,\n        instance,\n        handler: handlers[eventName],\n      });\n    }\n  });\n\nconst MAP_EVENTS = [\n  'bounds_changed', 'center_changed', 'click', 'dblclick', 'drag',\n  'dragend', 'dragstart', 'idle', 'maptypeid_changed',\n  'mousemove', 'mouseout', 'mouseover', 'projection_changed',\n  'resize', 'tilesloaded', 'zoom_changed'\n];\nconst GMAPS_MENU_ID = 'gmaps_context_menu';\n\n/**\n * GMaps is a wrapper for Google Maps JavaScript API. Its goal is to simplify Google Maps usage by performing complex tasks with fewer lines of code.\n */\nclass GMaps {\n  /**\n   * Creates a new GMaps instance, including a Google Maps map.\n   * @param {object} options - `options` accepts all the [MapOptions](https://developers.google.com/maps/documentation/javascript/reference#MapOptions) and [events](https://developers.google.com/maps/documentation/javascript/reference#Map) listed in the Google Maps API. Also accepts:\n   * @param {number} options.latitude - Latitude of the map's center.\n   * @param {number} options.longitude - Longitude of the map's center.\n   * @param {google.maps.LatLng} options.center - A `google.maps.LatLng` coordinate indicate the center. If set, `latitude` and `longitude` are ignored.\n   * @param {string|HTMLElement} options.element - container where the map will be rendered.\n   * @param {function} options.markerClusterer - A function to create a marker cluster. You can use MarkerClusterer or MarkerClustererPlus.\n   */\n  constructor(baseOptions = {}) {\n    if (!window.google || !window.google.maps) {\n      throw new Error('Google Maps JavaScript API is required. Check: https://developers.google.com/maps/documentation/javascript/tutorial');\n    }\n\n    const {\n      div,\n      el = div,\n      context,\n      element = getElement(el, context),\n      lat,\n      latitude = lat,\n      lng,\n      longitude = lng,\n      center = new google.maps.LatLng(latitude, longitude),\n      zoom = 15,\n      mapType = 'roadmap',\n      zoomControlOpt = {\n        style: 'DEFAULT',\n        position: 'TOP_LEFT',\n      },\n      panControl = true,\n      zoomControl = true,\n      mapTypeControl = true,\n      scaleControl = true,\n      streetViewControl = true,\n      overviewMapControl = true,\n      width,\n      height,\n      markerClusterer,\n      enableNewStyle,\n      ...options\n    } = baseOptions;\n\n    const mapTypeId = google.maps.MapTypeId[mapType.toUpperCase()];\n\n    const mapBaseOptions = {\n      zoom,\n      center,\n      mapTypeId,\n    };\n\n    const mapControlsOptions = {\n      panControl,\n      zoomControl,\n      zoomControlOptions: {\n        style: google.maps.ZoomControlStyle[zoomControlOpt.style],\n        position: google.maps.ControlPosition[zoomControlOpt.position],\n      },\n      mapTypeControl,\n      scaleControl,\n      streetViewControl,\n      overviewMapControl,\n    };\n\n    const filteredOptions = Object.keys(options).reduce((hash, key) => {\n      if (MAP_EVENTS.includes(key)) {\n        return hash;\n      }\n\n      return { ...hash, [key]: options[key], };\n    }, {});\n\n    this.id = Math.ceil(Math.random() * Date.now());\n\n    GMaps.contextMenus[this.id] = {};\n\n    google.maps.visualRefresh = enableNewStyle;\n\n    /**\n     * HTML element where the Google Maps map is rendered\n     *\n     * @type {HTMLElement}\n     */\n    this.element = typeof element === 'string' ? getElement(element) : element;\n\n    if (!this.element) {\n      throw new Error('No element defined. Pass an `element` option in GMaps.');\n    }\n\n    this.element.style.width = width || this.element.scrollWidth || this.element.offsetWidth;\n    this.element.style.height = height || this.element.scrollHeight || this.element.offsetHeight;\n\n    const mapOptions = {\n      ...filteredOptions,\n      ...mapBaseOptions,\n      ...mapControlsOptions,\n    };\n\n    this.map = new google.maps.Map(this.element, mapOptions);\n    /**\n     * Collection of custom controls in the map UI\n     *\n     * @type {array}\n     */\n    this.controls = [];\n    /**\n     * Collection of map's overlays\n     *\n     * @type {array}\n     */\n    this.overlays = [];\n    /**\n     * Collection of KML/GeoRSS and FusionTable layers\n     *\n     * @type {array}\n     */\n    this.layers = [];\n    /**\n     * Collection of data layers (See {@link GMaps#addLayer})\n     *\n     * @type {object}\n     */\n    this.singleLayers = {};\n    /**\n     * Collection of map's markers\n     *\n     * @type {array}\n     */\n    this.markers = [];\n    /**\n     * Collection of map's lines\n     *\n     * @type {array}\n     */\n    this.polylines = [];\n    /**\n     * Collection of map's routes requested by {@link GMaps#getRoutes}, {@link GMaps#renderRoute}, {@link GMaps#drawRoute}, {@link GMaps#travelRoute} or {@link GMaps#drawSteppedRoute}\n     *\n     * @type {array}\n     */\n    this.routes = [];\n    /**\n     * Collection of map's polygons\n     *\n     * @type {array}\n     */\n    this.polygons = [];\n    this.infoWindow = null;\n    this.overlayElement = null;\n    /**\n     * Current map's zoom\n     *\n     * @type {number}\n     */\n    this.zoom = zoom;\n\n    this.registeredEvents = {};\n\n    if (markerClusterer) {\n      /**\n       * Marker Clusterer instance\n       *\n       * @type {object}\n       */\n      this.markerClusterer = markerClusterer.apply(this, [this.map]);\n    }\n\n    google.maps.event.addListener(this.map, 'zoom_changed', this.hideContextMenu);\n\n    setupEvents({ events: MAP_EVENTS, object: this.map, instance: this, handlers: options, });\n\n    google.maps.event.addListener(this.map, 'rightclick', (event) => {\n      if (options.rightclick) {\n        options.rightclick.call(this, event);\n      }\n\n      if (GMaps.contextMenus[this.id].map) {\n        this.buildContextMenu('map', event);\n      }\n    });\n  }\n\n  buildContextMenuHTML(control, event) {\n    if (!getElementById(GMAPS_MENU_ID)) {\n      return;\n    }\n\n    const contextMenuElement = getElementById(GMAPS_MENU_ID);\n    const options = GMaps.contextMenus[this.id][control];\n\n    const html = Object.keys(options).map(key =>\n      `<li><a id=\"${control}_${key}\" href=\"#\">${options[key].title}</a></li>`\n    ).join('');\n\n    contextMenuElement.innerHTML = html;\n\n    const contextMenuItems = contextMenuElement.getElementsByTagName('a');\n\n    [...contextMenuItems].forEach((contextMenuItem) => {\n      const contextMenuItemListener = (contextMenuItemListenerEvent) => {\n        contextMenuItemListenerEvent.preventDefault();\n\n        options[contextMenuItemListenerEvent.target.id.replace(`${control}_`, '')].action.call(this, event);\n        this.hideContextMenu();\n      };\n\n      google.maps.event.clearListeners(contextMenuItem, 'click');\n      google.maps.event.addDomListenerOnce(contextMenuItem, 'click', contextMenuItemListener, false);\n    });\n\n    const position = findAbsolutePosition(this.element);\n    const left = position[0] + event.pixel.x - 15;\n    const top = position[1] + event.pixel.y - 15;\n\n    contextMenuElement.style.left = `${left}px`;\n    contextMenuElement.style.top = `${top}px`;\n  }\n\n  buildContextMenu(control, event) {\n    if (control === 'marker') {\n      // eslint-disable-next-line no-param-reassign\n      event.pixel = {};\n\n      const overlay = new google.maps.OverlayView();\n      overlay.setMap(this.map);\n\n      overlay.draw = () => {\n        const projection = overlay.getProjection();\n        const position = event.marker.getPosition();\n\n        // eslint-disable-next-line no-param-reassign\n        event.pixel = projection.fromLatLngToContainerPixel(position);\n\n        this.buildContextMenuHTML(control, event);\n      };\n    } else {\n      this.buildContextMenuHTML(control, event);\n    }\n\n    const contextMenuElement = getElementById(GMAPS_MENU_ID);\n\n    setTimeout(() => {\n      contextMenuElement.style.display = 'block';\n    }, 0);\n  }\n\n  /**\n   * Add a context menu for a map or a marker.\n   *\n   * @param {object} options - The `options` object should contain:\n   * * `control` (string): Kind of control the context menu will be attached. Can be \"map\" or \"marker\".\n   * * `options` (array): A collection of context menu items:\n   *   * `title` (string): Item's title shown in the context menu.\n   *   * `name` (string): Item's identifier.\n   *   * `action` (function): Function triggered after selecting the context menu item.\n   */\n  setContextMenu(options) {\n    GMaps.contextMenus[this.id][options.control] = {};\n\n    Object.keys(options.options).forEach((key) => {\n      const option = options.options[key];\n\n      GMaps.contextMenus[this.id][options.control][option.name] = {\n        title: option.title,\n        action: option.action,\n      };\n    });\n\n    let contextMenuElement = getElementById(GMAPS_MENU_ID);\n\n    if (!contextMenuElement) {\n      contextMenuElement = document.createElement('ul');\n\n      contextMenuElement.id = GMAPS_MENU_ID;\n      contextMenuElement.style.display = 'none';\n      contextMenuElement.style.position = 'absolute';\n      contextMenuElement.style.minWidth = '100px';\n      contextMenuElement.style.background = 'white';\n      contextMenuElement.style.listStyle = 'none';\n      contextMenuElement.style.padding = '8px';\n      contextMenuElement.style.boxShadow = '2px 2px 6px #ccc';\n\n      document.body.appendChild(contextMenuElement);\n    }\n\n    google.maps.event.addDomListener(contextMenuElement, 'mouseout', (event) => {\n      if (!event.relatedTarget || !event.target.contains(event.relatedTarget)) {\n        window.setTimeout(() => {\n          contextMenuElement.style.display = 'none';\n        }, 700);\n      }\n    }, false);\n  }\n\n  /**\n   * Hide the current context menu\n   */\n  hideContextMenu() {\n    const contextMenuElement = getElementById(GMAPS_MENU_ID);\n\n    if (contextMenuElement) {\n      contextMenuElement.style.display = 'none';\n    }\n  }\n\n  /**\n   * Trigger a `resize` event, useful if you need to repaint the current map (for changes in the viewport or display / hide actions).\n   */\n  refresh() {\n    google.maps.event.trigger(this.map, 'resize');\n  }\n\n  /**\n   * Adjust the map zoom to include all the coordinates in the `latLngs` array.\n   *\n   * @param {array} latLngs - Collection of `google.maps.LatLng` objects.\n   */\n  fitLatLngBounds(latLngs) {\n    const bounds = new google.maps.LatLngBounds();\n\n    latLngs.forEach(latLng => bounds.extend(latLng));\n\n    this.map.fitBounds(bounds);\n  }\n\n  /**\n   * Adjust the map zoom to include all the markers added in the map.\n   */\n  fitZoom() {\n    const latLngs = this.markers\n      .filter(marker => marker.visible)\n      .map(marker => marker.getPosition());\n\n    this.fitLatLngBounds(latLngs);\n  }\n\n  /**\n   * Center the map using the `lat` and `lng` coordinates.\n   *\n   * @param {number} latitude - Latitude of the coordinate. If `latitude` and `longitude` are set, `position` is ignored.\n   * @param {number} longitude - Longitude of the coordinate. If `latitude` and `longitude` are set, `position` is ignored.\n   * @param {google.maps.LatLng} position - A `google.maps.LatLng` coordinate indicate the position. If set, `latitude` and `longitude` are ignored.\n   * @param {function} [callback] - Callback that will be executed after the map is centered.\n   */\n  setCenter(...args) {\n    const latLng = latLngFromArguments(...args);\n    const callback = args.slice().pop();\n\n\n    this.map.panTo(latLng);\n\n    if (typeof callback === 'function') {\n      callback.call(this);\n    }\n  }\n\n  /**\n   * Return the HTML element container of the map.\n   *\n   * @returns {HTMLElement} the element container.\n   */\n  getElement() {\n    return this.element;\n  }\n\n  /**\n   * Increase the map's zoom.\n   *\n   * @param {number} [magnitude] - The number of times the map will be zoomed in.\n   */\n  zoomIn(magnitude = 1) {\n    this.zoom = this.map.getZoom() + magnitude;\n    this.map.setZoom(this.zoom);\n  }\n\n  /**\n   * Decrease the map's zoom.\n   *\n   * @param {number} [magnitude] - The number of times the map will be zoomed out.\n   */\n  zoomOut(magnitude = 1) {\n    this.zoom = this.map.getZoom() - magnitude;\n    this.map.setZoom(this.zoom);\n  }\n}\n\nGMaps.contextMenus = {};\n\nconst googleMapsMapMethods = Object.keys(google.maps.Map.prototype)\n  .filter(key => (typeof google.maps.Map.prototype[key] === 'function' && !GMaps.prototype[key]));\n\ngoogleMapsMapMethods.forEach((methodName) => {\n  // eslint-disable-next-line func-names\n  GMaps.prototype[methodName] = function (...args) {\n    return this.map[methodName].apply(this.map, args);\n  };\n});\n\nexport default GMaps;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import GMaps from './core';\n\n/**\n * Extends GMaps to bind and trigger events.\n * @module Events\n */\n\n/**\n * Collection of custom events that can be registered and fired.\n *\n * @type {array}\n */\nGMaps.customEvents = ['marker_added', 'marker_removed', 'polyline_added', 'polyline_removed', 'polygon_added', 'polygon_removed', 'layer_added', 'layer_removed', 'overlay_map_type_added', 'overlay_map_type_removed', 'overlay_added', 'overlay_removed', 'geolocated', 'geolocation_failed'];\n\n/**\n * Add an event (native or custom) to an object.\n * @function on\n *\n * @param {string} eventName - The name of the event. It can be any of the native events from Google Maps, or the ones described in `GMaps.customEvents`.\n * @param {object} target - The target of the event. It can be a native object from Google Maps, (such as a google.maps.Map, google.maps.Marker, etc.), or a GMaps instance.\n * @param {function} handler - The handler (often called listener) of the event. Is a function that will be executed every time the event is fired.\n *\n * @returns {object}\n */\nGMaps.on = (eventName, object, handler) => {\n  let target = object;\n\n  if (GMaps.customEvents.indexOf(eventName) === -1) {\n    if (target instanceof GMaps) {\n      target = target.map;\n    }\n\n    return google.maps.event.addListener(target, eventName, handler);\n  }\n\n  const registeredEvent = {\n    handler,\n    eventName,\n  };\n\n  target.registeredEvents[eventName] = target.registeredEvents[eventName] || [];\n  target.registeredEvents[eventName].push(registeredEvent);\n\n  return registeredEvent;\n};\n\n/**\n * Remove an event (native or custom) to an object.\n * @function off\n *\n * @param {string} eventName - The name of the event. It can be any of the native events from Google Maps, or the ones described in `GMaps.customEvents`.\n * @param {object} target - The target of the event. It can be a native object from Google Maps, (such as a google.maps.Map, google.maps.Marker, etc.), or a GMaps instance.\n */\nGMaps.off = (eventName, object) => {\n  let target = object;\n\n  if (GMaps.customEvents.indexOf(eventName) === -1) {\n    if (target instanceof GMaps) {\n      target = target.map;\n    }\n\n    google.maps.event.clearListeners(target, eventName);\n  } else {\n    target.registeredEvents[eventName] = [];\n  }\n};\n\n/**\n * Add a native event that will be removed from the target after it has been executed once.\n * @function once\n *\n * @param {string} eventName - The name of the event. It has to be any of the native events from Google Maps.\n * @param {object} target - The target of the event. It has to be a native object from Google Maps, such as a google.maps.Map, google.maps.Marker, etc.\n * @param {function} handler - The handler (often called listener) of the event. Is a function that will be executed when the event is fired the first time.\n *\n * @returns {object}\n */\nGMaps.once = (eventName, object, handler) => {\n  let target = object;\n\n  if (GMaps.customEvents.indexOf(eventName) === -1) {\n    if (target instanceof GMaps) {\n      target = target.map;\n    }\n\n    return google.maps.event.addListenerOnce(target, eventName, handler);\n  }\n\n  return undefined;\n};\n\n/**\n * Trigger an event (native or custom) and execute all the handlers registered previously.\n * @function fire\n *\n * @param {string} eventName - The name of the event. It can be any of the native events from Google Maps, or the ones described in `GMaps.customEvents`.\n * @param {object} target - The target of the event. It can be a native object from Google Maps, (such as a google.maps.Map, google.maps.Marker, etc.), or a GMaps instance.\n * @param {object} context - The context for the event handler (represented by `this` keyword inside the handler).\n *\n * @returns {object}\n */\nGMaps.fire = (eventName, object, context) => {\n  if (GMaps.customEvents.indexOf(eventName) === -1) {\n    // eslint-disable-next-line no-undef\n    const eventArguments = Array.prototype.slice.apply(arguments).slice(2);\n    google.maps.event.trigger(object, eventName, eventArguments);\n  } else if (eventName in context.registeredEvents) {\n    context.registeredEvents[eventName].forEach(registeredEvent =>\n      registeredEvent.handler.call(context, object)\n    );\n  }\n};\n\nGMaps.prototype.on = function on(eventName, handler) {\n  return GMaps.on(eventName, this, handler);\n};\n\nGMaps.prototype.off = function off(eventName) {\n  GMaps.off(eventName, this);\n};\n\nGMaps.prototype.once = function once(eventName, handler) {\n  return GMaps.once(eventName, this, handler);\n};\n\nexport default GMaps;\n","/* eslint-disable */\nif (typeof window.google === 'object' && window.google.maps) {\n  //==========================\n  // Polygon containsLatLng\n  // https://github.com/tparkin/Google-Maps-Point-in-Polygon\n  // Poygon getBounds extension - google-maps-extensions\n  // http://code.google.com/p/google-maps-extensions/source/browse/google.maps.Polygon.getBounds.js\n  if (!google.maps.Polygon.prototype.getBounds) {\n    google.maps.Polygon.prototype.getBounds = function() {\n      var bounds = new google.maps.LatLngBounds();\n      var paths = this.getPaths();\n      var path;\n\n      for (var p = 0; p < paths.getLength(); p++) {\n        path = paths.getAt(p);\n        for (var i = 0; i < path.getLength(); i++) {\n          bounds.extend(path.getAt(i));\n        }\n      }\n\n      return bounds;\n    };\n  }\n\n  if (!google.maps.Polygon.prototype.containsLatLng) {\n    // Polygon containsLatLng - method to determine if a latLng is within a polygon\n    google.maps.Polygon.prototype.containsLatLng = function(latLng) {\n      // Exclude points outside of bounds as there is no way they are in the poly\n      var bounds = this.getBounds();\n\n      if (bounds !== null && !bounds.contains(latLng)) {\n        return false;\n      }\n\n      // Raycast point in polygon method\n      var inPoly = false;\n\n      var numPaths = this.getPaths().getLength();\n      for (var p = 0; p < numPaths; p++) {\n        var path = this.getPaths().getAt(p);\n        var numPoints = path.getLength();\n        var j = numPoints - 1;\n\n        for (var i = 0; i < numPoints; i++) {\n          var vertex1 = path.getAt(i);\n          var vertex2 = path.getAt(j);\n\n          if (vertex1.lng() < latLng.lng() && vertex2.lng() >= latLng.lng() || vertex2.lng() < latLng.lng() && vertex1.lng() >= latLng.lng()) {\n            if (vertex1.lat() + (latLng.lng() - vertex1.lng()) / (vertex2.lng() - vertex1.lng()) * (vertex2.lat() - vertex1.lat()) < latLng.lat()) {\n              inPoly = !inPoly;\n            }\n          }\n\n          j = i;\n        }\n      }\n\n      return inPoly;\n    };\n  }\n\n  if (!google.maps.Circle.prototype.containsLatLng) {\n    google.maps.Circle.prototype.containsLatLng = function(latLng) {\n      if (google.maps.geometry) {\n        return google.maps.geometry.spherical.computeDistanceBetween(this.getCenter(), latLng) <= this.getRadius();\n      }\n      else {\n        return true;\n      }\n    };\n  }\n\n  google.maps.Rectangle.prototype.containsLatLng = function(latLng) {\n    return this.getBounds().contains(latLng);\n  };\n\n  google.maps.LatLngBounds.prototype.containsLatLng = function(latLng) {\n    return this.contains(latLng);\n  };\n\n  google.maps.Marker.prototype.setFences = function(fences) {\n    this.fences = fences;\n  };\n\n  google.maps.Marker.prototype.addFence = function(fence) {\n    this.fences.push(fence);\n  };\n\n  google.maps.Marker.prototype.getId = function() {\n    return this['__gm_id'];\n  };\n}\n\n//==========================\n// Array indexOf\n// https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/indexOf\nif (!Array.prototype.indexOf) {\n  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n      \"use strict\";\n      if (this == null) {\n          throw new TypeError();\n      }\n      var t = Object(this);\n      var len = t.length >>> 0;\n      if (len === 0) {\n          return -1;\n      }\n      var n = 0;\n      if (arguments.length > 1) {\n          n = Number(arguments[1]);\n          if (n != n) { // shortcut for verifying if it's NaN\n              n = 0;\n          } else if (n != 0 && n != Infinity && n != -Infinity) {\n              n = (n > 0 || -1) * Math.floor(Math.abs(n));\n          }\n      }\n      if (n >= len) {\n          return -1;\n      }\n      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n      for (; k < len; k++) {\n          if (k in t && t[k] === searchElement) {\n              return k;\n          }\n      }\n      return -1;\n  }\n}","import GMaps from './core';\n\n/**\n * Extends GMaps to use UI controls.\n * @module Controls\n */\n\nconst createControl = ({ style = {}, id, title, classes, content, position, events = {}, disableDefaultStyles, }) => {\n  const control = global.document.createElement('div');\n\n  control.style.cursor = 'pointer';\n\n  if (disableDefaultStyles !== true) {\n    control.style.fontFamily = 'Roboto, Arial, sans-serif';\n    control.style.fontSize = '11px';\n    control.style.boxShadow = 'rgba(0, 0, 0, 0.298039) 0px 1px 4px -1px';\n  }\n\n  Object.keys(style).forEach((property) => {\n    control.style = style[property];\n  });\n\n  if (id) {\n    control.id = id;\n  }\n\n  if (title) {\n    control.title = title;\n  }\n\n  if (classes) {\n    control.className = classes;\n  }\n\n  if (content) {\n    if (typeof content === 'string') {\n      control.innerHTML = content;\n    } else if (content instanceof global.HTMLElement) {\n      control.appendChild(content);\n    }\n  }\n\n  if (position) {\n    control.position = google.maps.ControlPosition[position.toUpperCase()];\n  }\n\n  Object.keys(events).forEach(eventName =>\n    google.maps.event.addDomListener(control, eventName, event =>\n      events[eventName].call(this, event)\n    )\n  );\n\n  control.index = 1;\n\n  return control;\n};\n\n/**\n * Add a custom control to the map UI.\n * @function addControl\n *\n * @param {object} options - The `options` object should contain:\n * * `style` (object): The keys and values of this object should be valid CSS properties and values.\n * * `id` (string): The HTML id for the custom control.\n * * `classes` (string): A string containing all the HTML classes for the custom control.\n * * `content` (string or HTML element): The content of the custom control.\n * * `position` (string): Any valid [`google.maps.ControlPosition`](https://developers.google.com/maps/documentation/javascript/controls#ControlPositioning) value, in lower or upper case.\n * * `events` (object): The keys of this object should be valid DOM events. The values should be functions.\n * * `disableDefaultStyles` (boolean): If false, removes the default styles for the controls like font (family and size), and box shadow.\n *\n * @returns {HTMLElement}\n */\nGMaps.prototype.addControl = function addControl(options) {\n  const control = createControl(options);\n\n  this.controls.push(control);\n  this.map.controls[control.position].push(control);\n\n  return control;\n};\n\n/**\n * Remove a control from the map. `control` should be a control returned by `addControl()`.\n * @function removeControl\n *\n * @param {HTMLElement} control - One of the controls returned by `addControl()`.\n * @returns {HTMLElement} the removed control.\n */\nGMaps.prototype.removeControl = function removeControl(control) {\n  const controlIndex = this.controls.indexOf(control);\n\n  this.controls.splice(controlIndex, 1);\n\n  if (control.position >= 0 && controlIndex >= 0) {\n    const controlsForPosition = this.map.controls[control.position];\n    const controlIndexInCollection = controlsForPosition.indexOf(control);\n\n    controlsForPosition.removeAt(controlIndexInCollection);\n  }\n\n  return control;\n};\n\nexport default GMaps;\n","import GMaps from './core';\nimport './events';\n\n/**\n * Extends GMaps to use custom overlays.\n * @module Overlays\n */\n\nconst STOP_PROPAGATION_EVENTS = ['contextmenu', 'DOMMouseScroll', 'dblclick', 'mousedown'];\n\n/**\n * Draw an overlay in the Map and add it to the overlays collection. This method also fires a `overlay_added` event.\n * @function drawOverlay\n *\n * @param {object} options - The `options` object should contain:\n * @param {boolean} options.autoShow - Show the overlay inmediatly after being created.\n * @param {number} options.latitude - Latitude of the coordinate where the overlay is placed. If `latitude` and `longitude` are set, `position`is ignored.\n * @param {number} options.longitude - Longitude of the coordinate where the overlay is placed. If `latitude` and `longitude` are set, `position`is ignored.\n * @param {google.maps.LatLng} options.position - A `google.maps.LatLng` coordinate where the overlay is placed. If set, `latitude` and `longitude` are ignored.\n * @param {string} options.content - HTML that will be drawn in the overlay.\n * @param {string} options.layer - Id of any of the layers defined in [google.maps.MapPanes](https://developers.google.com/maps/documentation/javascript/reference#MapPanes):\n *   * floatPane\n *   * floatShadow\n *   * mapPane\n *   * overlayImage\n *   * overlayLayer\n *   * overlayMouseTarget\n *   * overlayShadow\n * @param {string} options.verticalAlign - Vertical align of the overlay (where the center is the coordinate `latitude`, `longitude`):\n *   * top\n *   * middle\n *   * bottom\n * @param {string} options.horizontalAlign - Horizontal align of the overlay (where the center is the coordinate `latitude`, `longitude`):\n *   * left\n *   * center\n *   * right\n * @param {number} options.horizontalOffset - Horizontal offset in pixels of the overlay.\n * @param {number} options.verticalOffset - Vertical offset in pixels of the overlay.\n *\n * @returns {google.maps.OverlayView}\n */\nGMaps.prototype.drawOverlay = function drawOverlay(baseOptions) {\n  const self = this;\n  const overlay = new google.maps.OverlayView();\n  const {\n    autoShow = true,\n    lat,\n    latitude = lat,\n    lng,\n    longitude = lng,\n    position = new google.maps.LatLng(latitude, longitude),\n    layer = 'overlayLayer',\n    horizontalOffset = 0,\n    verticalOffset = 0,\n    verticalAlign,\n    horizontalAlign,\n    ...options\n  } = baseOptions;\n\n  overlay.setMap(this.map);\n\n  overlay.onAdd = function onAdd() {\n    const element = document.createElement('div');\n\n    element.style.borderStyle = 'none';\n    element.style.borderWidth = '0px';\n    element.style.position = 'absolute';\n    element.style.zIndex = 100;\n    element.innerHTML = options.content;\n\n    overlay.element = element;\n\n    const panes = this.getPanes();\n    const overlayLayer = panes[layer];\n\n    overlayLayer.appendChild(element);\n\n    STOP_PROPAGATION_EVENTS.forEach(eventName =>\n      google.maps.event.addDomListener(element, eventName, (event) => {\n        if (global.navigator.userAgent.toLowerCase().indexOf('msie') !== -1 && document.all) {\n          // eslint-disable-next-line no-param-reassign\n          event.cancelBubble = true;\n          // eslint-disable-next-line no-param-reassign\n          event.returnValue = false;\n        } else {\n          event.stopPropagation();\n        }\n      })\n    );\n\n    if (options.click) {\n      panes.overlayMouseTarget.appendChild(overlay.element);\n      google.maps.event.addDomListener(overlay.element, 'click', () => {\n        options.click.call(self, overlay);\n      });\n    }\n\n    google.maps.event.trigger(this, 'ready');\n  };\n\n  overlay.draw = function draw() {\n    const projection = this.getProjection();\n    const pixel = projection.fromLatLngToDivPixel(position);\n\n    const { element, } = overlay;\n    const content = element.children[0];\n    const contentHeight = content.clientHeight;\n    const contentWidth = content.clientWidth;\n\n    switch (verticalAlign) {\n      case 'top':\n        element.style.top = `${pixel.y - contentHeight + verticalOffset}px`;\n        break;\n      default:\n      case 'middle':\n        element.style.top = `${pixel.y - (contentHeight / 2) + verticalOffset}px`;\n        break;\n      case 'bottom':\n        element.style.top = `${pixel.y + verticalOffset}px`;\n        break;\n    }\n\n    switch (horizontalAlign) {\n      case 'left':\n        element.style.left = `${pixel.x - contentWidth + horizontalOffset}px`;\n        break;\n      default:\n      case 'center':\n        element.style.left = `${pixel.x - (contentWidth / 2) + horizontalOffset}px`;\n        break;\n      case 'right':\n        element.style.left = `${pixel.x + horizontalOffset}px`;\n        break;\n    }\n\n    element.style.display = autoShow ? 'block' : 'none';\n\n    if (!autoShow) {\n      options.show.call(this, element);\n    }\n  };\n\n  overlay.onRemove = function onRemove() {\n    const { element, } = overlay;\n\n    if (options.remove) {\n      options.remove.call(this, element);\n    } else {\n      element.parentNode.removeChild(element);\n      overlay.element = null;\n    }\n  };\n\n  this.overlays.push(overlay);\n\n  GMaps.fire('overlay_added', overlay, this);\n\n  return overlay;\n};\n\n/**\n * Remove an overlay from the map and from the overlays collection. This method also fires a `overlay_removed` event.\n * @function removeOverlay\n *\n * @param {google.maps.OverlayView} overlay - The overlay to be removed.\n */\nGMaps.prototype.removeOverlay = function removeOverlay(overlay) {\n  const overlayIndex = this.overlays.indexOf(overlay);\n\n  if (overlayIndex >= 0) {\n    overlay.setMap(null);\n    this.overlays.splice(overlayIndex, 1);\n\n    GMaps.fire('overlay_removed', overlay, this);\n  }\n};\n\n/**\n * Remove all the overlays from the map and clear the overlays collection. This method does not fire a `overlay_removed` event.\n * @function removeOverlays\n */\nGMaps.prototype.removeOverlays = function removeOverlays() {\n  this.overlays.forEach(overlay => overlay.setMap(null));\n\n  this.overlays = [];\n};\n\nexport default GMaps;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","import GMaps from './core';\n\nconst parseColor = (color, opacity) => {\n  let parsedColor;\n\n  if (color[0] === '#') {\n    parsedColor = color.replace('#', '0x');\n\n    if (opacity) {\n      // eslint-disable-next-line no-param-reassign\n      opacity = Math.min(1, Math.max(parseFloat(opacity), 0));\n\n      if (opacity === 0) {\n        return '0x00000000';\n      }\n\n      // eslint-disable-next-line no-param-reassign\n      opacity = (opacity * 255).toString(16);\n\n      if (opacity.length === 1) {\n        // eslint-disable-next-line no-param-reassign\n        opacity += opacity;\n      }\n\n      parsedColor = parsedColor.slice(0, 8) + opacity;\n    }\n  }\n\n  return parsedColor;\n};\n\n/**\n * Extends GMaps to generate static maps.\n * @module Static\n */\n\n/**\n * Creates an URL for a static map from current GMaps map.\n * @function toImage\n *\n * @param {object} options - The `options` object should contain:\n * @param {array} options.size - Width and height of the image.\n *\n * @returns {string}\n */\n GMaps.prototype.toImage = function toImage(options = {}) {\n  const { size = [this.element.clientWidth, this.element.clientHeight], zoom = this.getZoom(), } = options;\n\n  const staticMapOptions = {\n    size,\n    zoom,\n    latitude: this.getCenter().lat(),\n    longitude: this.getCenter().lng(),\n    markers: this.markers.map(marker => ({\n      latitude: marker.getPosition().lat(),\n      longitude: marker.getPosition().lng(),\n    })),\n  };\n\n  if (this.polylines.length > 0) {\n    const polyline = this.polylines[0];\n\n    staticMapOptions.polyline = {\n      path: google.maps.geometry.encoding.encodePath(polyline.getPath()),\n      strokeColor: polyline.strokeColor,\n      strokeOpacity: polyline.strokeOpacity,\n      strokeWeight: polyline.strokeWeight,\n    };\n  }\n\n  return GMaps.staticMapURL(staticMapOptions);\n};\n\nconst buildMarkerParameters = (marker) => {\n  const markerParameters = [];\n\n  const { address, lat, latitude = lat, lng, longitude = lng, size, icon, color, label, ...markerOptions } = marker;\n\n  const location = address || `${latitude},${longitude}`;\n\n  if (size) {\n    markerParameters.push(`size:${size}`);\n  }\n\n  if (icon) {\n    markerParameters.push(`icon:${encodeURI(icon)}`);\n  }\n\n  if (color) {\n    markerParameters.push(`color:${color.replace('#', '0x')}`);\n  }\n\n  if (label) {\n    markerParameters.push(`label:${label[0].toUpperCase()}`);\n  }\n\n  Object.keys(markerOptions).forEach(key => markerParameters.push(`${key}:${markerParameters[key]}`));\n\n  markerParameters.push(location);\n\n  return markerParameters;\n};\n\nconst buildPathParameters = (polyline) => {\n  const { path, } = polyline;\n  const polylineParameters = [];\n\n  if (polyline.strokeWeight) {\n    polylineParameters.push(`weight:${parseInt(polyline.strokeWeight, 10)}`);\n  }\n\n  if (polyline.strokeColor) {\n    polylineParameters.push(`color:${parseColor(polyline.strokeColor, polyline.strokeOpacity)}`);\n  }\n\n  if (polyline.fillColor) {\n    polylineParameters.push(`fillcolor:${parseColor(polyline.fillColor, polyline.fillOpacity)}`);\n  }\n\n  if (path.join) {\n    path.forEach(coordinates => polylineParameters.push(coordinates.join(',')));\n  } else {\n    polylineParameters.push(`enc:${path}`);\n  }\n\n  return polylineParameters;\n};\n\nconst buildStyleParameters = (style) => {\n  const styleParameters = [];\n\n  if (style.featureType) {\n    styleParameters.push(`feature:${style.featureType.toLowerCase()}`);\n  }\n\n  if (style.elementType) {\n    styleParameters.push(`element:${style.elementType.toLowerCase()}`);\n  }\n\n  if (style.stylers.length) {\n    style.stylers.forEach((styler) => {\n      Object.keys(styler).forEach((key) => {\n        const value = (key === 'hue' || key === 'color') ? styler[key].replace('#', '0x') : styler[key];\n\n        styleParameters.push(`${key}:${value}`);\n      });\n    });\n  }\n\n  return styleParameters;\n};\n\nGMaps.staticMapURL = function staticMapURL(baseOptions) {\n  const { url, lat, latitude = lat, lng, longitude = lng, center, address, zoom = 15, markers = [], styles, polyline, visible, size = [630, 300], ...options } = baseOptions;\n  const defaultRoot = `${global.location.protocol === 'file:' ? 'http:' : global.location.protocol}//maps.googleapis.com/maps/api/staticmap`;\n\n  let root = url || defaultRoot;\n  const parameters = [];\n\n  root += '?';\n\n  // Map options\n  if (center) {\n    parameters.push(`center=${center}`);\n  } else if (address) {\n    parameters.push(`center=${address}`);\n  } else if (latitude && longitude) {\n    parameters.push(`center=${latitude},${longitude}`);\n  } else if (visible) {\n    parameters.push(`visible=${encodeURI(visible.join('|'))}`);\n  }\n\n  parameters.push(`size=${size.join('x')}`);\n  parameters.push(`zoom=${zoom}`);\n\n  Object.keys(options).forEach(key => parameters.push(`${key}=${options[key]}`));\n\n  // Map style\n  if (styles) {\n    styles.forEach((style) => {\n      const styleParameters = buildStyleParameters(style);\n\n      parameters.push(`style=${encodeURI(styleParameters.join('|'))}`);\n    });\n  }\n\n  // Markers\n  if (markers.length) {\n    markers.forEach((marker) => {\n      const markerParameters = buildMarkerParameters(marker);\n      parameters.push(`markers=${encodeURI(markerParameters.join('|'))}`);\n    });\n  }\n\n  // Polylines\n  if (polyline) {\n    const polylineParameters = buildPathParameters(polyline);\n\n    parameters.push(`path=${encodeURI(polylineParameters.join('|'))}`);\n  }\n\n  // Retina support\n  const dpi = window.devicePixelRatio || 1;\n  parameters.push(`scale=${dpi}`);\n\n  return root + parameters.join('&');\n};\n\nexport default GMaps;\n","import GMaps, { getElementById, setupEvents } from './core';\n\n/**\n * Extends GMaps to use StreetView panoramas\n * @module StreetView\n */\n\nconst STREETVIEW_EVENTS = ['closeclick', 'links_changed', 'pano_changed', 'position_changed', 'pov_changed', 'resize', 'visible_changed'];\n\n/**\n * Display a Street View Panorama for a position.\n * @function createPanorama\n *\n * @param {object} options - The `options` object should contain:\n * @param {number} options.latitude - Latitude of the coordinate where the panorama is placed. If not set, it takes the Map's center.\n * @param {number} options.longitude - Longitude of the coordinate where the panorama is placed. If not set, it takes the Map's center.\n * @param {google.maps.LatLng} options.position - A `google.maps.LatLng` coordinate where the panorama is placed. If set, `latitude` and `longitude` are ignored.\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#StreetViewPanoramaOptions) and any event defined in the [\"Events\" section](https://developers.google.com/maps/documentation/javascript/reference#StreetViewPanorama).\n *\n * @returns {google.maps.StreetViewPanorama}\n */\nGMaps.prototype.createPanorama = function createPanorama(baseOptions) {\n  const { lat = this.getCenter().lat(), latitude = lat, lng = this.getCenter().lng(), longitude = lng, ...options } = baseOptions;\n\n  const streetViewOptions = {\n    latitude,\n    longitude,\n    instance: this,\n    ...options,\n  };\n\n  this.panorama = GMaps.createPanorama(streetViewOptions);\n\n  this.map.setStreetView(this.panorama);\n\n  return this.panorama;\n};\n\nGMaps.createPanorama = function createPanorama(baseOptions) {\n  const {\n    el,\n    element = el,\n    context,\n    lat,\n    latitude = lat,\n    lng,\n    longitude = lng,\n    position = new google.maps.LatLng(latitude, longitude),\n    instance = global,\n    ...options\n  } = baseOptions;\n\n  const containerElement = getElementById(element, context);\n\n  const filteredOptions = Object.keys(options).reduce((hash, key) => {\n    if (STREETVIEW_EVENTS.includes(key)) {\n      return hash;\n    }\n\n    return { ...hash, [key]: options[key], };\n  }, {});\n\n  const streetViewOptions = {\n    ...filteredOptions,\n    position,\n    visible: true,\n  };\n\n  const panorama = new google.maps.StreetViewPanorama(containerElement, streetViewOptions);\n\n  setupEvents({ events: STREETVIEW_EVENTS, object: panorama, instance, handlers: options, });\n\n  return panorama;\n};\n\nexport default GMaps;\n","import GMaps from './core';\n\n/**\n * Extends GMaps to add utils functions.\n * @module Utils\n */\n\n/**\n * Geolocate using browser's Web API.\n * @function geolocate\n * @static\n *\n * @param {object} options - The `options` object should contain:\n * @param {function} options.always - A callback that will be executed after the `success`, `error` and `not_supported` callbacks.\n * @param {function} options.success - A callback that will be executed after the browser find its geolocation.\n * @param {function} options.error - A callback that will be executed after the browser fails at finding its geolocation.\n * @param {function} options.not_supported - A callback that will be executed if the browser doesn't support geolocation.\n * @param {object} options.options - Object with all options defined in [PositionOptions](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n */\nGMaps.geolocate = function geolocate(options) {\n  const completeCallback = options.always || options.complete;\n\n  if (global.navigator.geolocation) {\n    global.navigator.geolocation.getCurrentPosition((position) => {\n      if (options.success) {\n        options.success(position);\n      }\n\n      if (completeCallback) {\n        completeCallback();\n      }\n    }, (error) => {\n      if (options.error) {\n        options.error(error);\n      }\n\n      if (completeCallback) {\n        completeCallback();\n      }\n    }, options.options);\n  } else {\n    if (options.not_supported) {\n      options.not_supported();\n    }\n\n    if (completeCallback) {\n      completeCallback();\n    }\n  }\n};\n\n/**\n * Geocode using Google Maps Geocoding service.\n * @function geolocate\n * @static\n *\n * @param {object} options - The `options` object should contain:\n * @param {number} options.latitude - Latitude of the coordinate to geocode. If `latitude` and `longitude` are set, `location` is ignored.\n * @param {number} options.longitude - Longitude of the coordinate to geocode. If `latitude` and `longitude` are set, `location` is ignored.\n * @param {google.maps.LatLng} options.location - A `google.maps.LatLng` coordinate to geocode. If set, `latitude` and `longitude` are ignored.\n * @param {function} options.callback - Function that will be executed after the results are returned. It receives 2 arguments, which is an array of [GeocoderResult](https://developers.google.com/maps/documentation/javascript/reference#GeocoderResult) objects and the [request's status](https://developers.google.com/maps/documentation/javascript/reference#GeocoderStatus).\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#GeocoderRequest).\n *\n */\nGMaps.geocode = function geocode(baseOptions) {\n  const {\n    callback,\n    lat,\n    latitude = lat,\n    lng,\n    longitude = lng,\n    location = new google.maps.LatLng(latitude, longitude),\n    ...options\n  } = baseOptions;\n\n  this.geocoder = new google.maps.Geocoder();\n\n  const geocodeOptions = {\n    ...options,\n    location,\n  };\n\n  this.geocoder.geocode(geocodeOptions, callback);\n};\n\nexport default GMaps;\n","import GMaps, { latLngFromArguments } from './core';\nimport './polyfills';\n\n/**\n * Extends GMaps to use geofences.\n * @module Geofences\n */\n\n/**\n * Check if a coordinate is inside or not a geofence.\n * @function checkGeofence\n *\n * @param {object} latLng - A LatLngLiteral object (a plain object with `lat` and `lng` properties).\n * @param {object} fence - A fence object, which can be an instance of `google.maps.Polygon`, `google.maps.Circle`, `google.maps.Rectangle` or `google.maps.LatLngBounds`.\n *\n * @returns {boolean} Is `true` if the coordinate is inside the fence, and `false` if is not.\n */\nGMaps.prototype.checkGeofence = function checkGeofence(...args) {\n  const lagLng = latLngFromArguments(args);\n  const fence = args.pop();\n\n  return fence.containsLatLng(lagLng);\n};\n\n/**\n * Check if a marker's position is inside or not any of its geofences. It will trigger the `outsideCallback` function for every fence that contains the marker's position.\n * @function checkMarkerGeofence\n *\n * @param {google.maps.Marker} marker - A marker added with `GMaps#addMarker`.\n * @param {function} outsideCallback - A function that will receive two arguments: the `marker` and the current fence.\n */\nGMaps.prototype.checkMarkerGeofence = function checkMarkerGeofence(marker, outsideCallback) {\n  if (marker.fences) {\n    marker.fences.forEach((fence) => {\n      const position = marker.getPosition();\n\n      if (!this.checkGeofence(position, fence)) {\n        outsideCallback(marker, fence);\n      }\n    });\n  }\n};\n\nexport default GMaps;\n","import GMaps, { setupEvents } from './core';\nimport './events';\nimport './geofences';\n\n/**\n * Extends GMaps to use markers.\n * @module Markers\n */\n\nconst INFO_WINDOW_EVENTS = ['closeclick', 'content_changed', 'domready', 'position_changed', 'zindex_changed'];\nconst MARKER_EVENTS = ['animation_changed', 'clickable_changed', 'cursor_changed', 'draggable_changed', 'flat_changed', 'icon_changed', 'position_changed', 'shadow_changed', 'shape_changed', 'title_changed', 'visible_changed', 'zindex_changed'];\nconst MARKER_MOUSE_EVENTS = ['dblclick', 'drag', 'dragend', 'dragstart', 'mousedown', 'mouseout', 'mouseover', 'mouseup'];\n\nGMaps.prototype.createMarker = function createMarker(baseOptions) {\n  const self = this;\n  const { lat, latitude = lat, lng, longitude = lng, position, details, fences, outside, infoWindow, ...options } = baseOptions;\n\n  if (latitude === undefined && longitude === undefined && position === undefined) {\n    throw new Error('No latitude or longitude defined.');\n  }\n\n  const markerOptions = {\n    ...options,\n    position: position || new google.maps.LatLng(latitude, longitude),\n    map: null,\n  };\n\n  const marker = new google.maps.Marker(markerOptions);\n\n  marker.fences = fences;\n\n  if (infoWindow) {\n    marker.infoWindow = new google.maps.InfoWindow(infoWindow);\n\n    setupEvents({ events: INFO_WINDOW_EVENTS, object: marker.infoWindow, instance: this, handlers: infoWindow, });\n  }\n\n  setupEvents({ events: MARKER_EVENTS, object: marker, instance: this, handlers: options, });\n\n  MARKER_MOUSE_EVENTS.forEach((eventName) => {\n    if (options[eventName]) {\n      google.maps.event.addListener(marker, eventName, (event = this) => {\n        if (!event.pixel) {\n          // eslint-disable-next-line no-param-reassign\n          event.pixel = this.map.getProjection().fromLatLngToPoint(event.latLng);\n        }\n\n        options[eventName].call(this, event);\n      });\n    }\n  });\n\n  google.maps.event.addListener(marker, 'click', function onMarkerClick(event) {\n    this.details = details;\n\n    if (options.click) {\n      options.click.call(this, event);\n    }\n\n    if (marker.infoWindow) {\n      self.hideInfoWindows();\n      marker.infoWindow.open(self.map, marker);\n    }\n  });\n\n  google.maps.event.addListener(marker, 'rightclick', function onMarkerRightClick(event) {\n    // eslint-disable-next-line no-param-reassign\n    event.marker = this;\n\n    if (options.rightclick) {\n      options.rightclick.call(this, event);\n    }\n\n    if (GMaps.contextMenus[self.id].marker !== undefined) {\n      self.buildContextMenu('marker', event);\n    }\n  });\n\n  if (marker.fences) {\n    google.maps.event.addListener(marker, 'dragend', function onMarkerDragEnd() {\n      self.checkMarkerGeofence(this, outside);\n    });\n  }\n\n  return marker;\n};\n\n/**\n * Draw a marker in the Map and add it to the markers collection. This method also fires a `marker_added` event.\n * @function addMarker\n *\n * @param {object} options - The `options` object should contain:\n * @param {number} options.latitude - Latitude of the position. If `latitude` and `longitude` are set, `position` is ignored.\n * @param {number} options.longitude - Longitude of the position. If `latitude` and `longitude` are set, `position` is ignored.\n * @param {google.maps.LatLng} options.position - A `google.maps.LatLng` coordinate indicate the position. If set, `latitude` and `longitude` are ignored.\n * @param {object} options.details - Custom object with extra data.\n * @param {array} options.fences - Collection of `google.maps.Polygon` objects that defines a marker's boundaries or geofences.\n * @param {function} options.outside - Callback fired when the marker is oustide any of its fences.\n * @param {object} options.infoWindow - Object with all options defined in [google.maps.InfoWindowOptions](https://developers.google.com/maps/documentation/javascript/reference#InfoWindowOptions).\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#MarkerOptions) and any event defined in the [\"Events\" section](https://developers.google.com/maps/documentation/javascript/reference#Marker).\n *\n * @returns {google.maps.Marker}\n */\nGMaps.prototype.addMarker = function addMarker(options) {\n  // eslint-disable-next-line camelcase\n  const { gm_accessors_, lat, latitude = lat, lng, longitude = lng, position, } = options;\n\n  let marker;\n\n  // eslint-disable-next-line camelcase\n  if (gm_accessors_) {\n    // Native google.maps.Marker object\n    marker = options;\n  } else if ((latitude && longitude) || position) {\n    marker = this.createMarker(options);\n  } else {\n    throw new Error('No latitude or longitude defined.');\n  }\n\n  marker.setMap(this.map);\n\n  if (this.markerClusterer) {\n    this.markerClusterer.addMarker(marker);\n  }\n\n  this.markers.push(marker);\n\n  GMaps.fire('marker_added', marker, this);\n\n  return marker;\n};\n\n/**\n * Draw a collection of markers into the Map. This method fires a `marker_added` event for each marker added.\n * @function addMarkers\n *\n * @param {array} markers - An array of `options` objects, which accepts the same options as in {@link GMaps#addMarker}.\n *\n * @returns {array}\n */\nGMaps.prototype.addMarkers = function addMarkers(markers) {\n  markers.forEach(marker => this.addMarker(marker));\n\n  return this.markers;\n};\n\n/**\n * Hide all markers' InfoWindows.\n * @function hideInfoWindows\n */\nGMaps.prototype.hideInfoWindows = function hideInfoWindows() {\n  this.markers.forEach((marker) => {\n    if (marker.infoWindow) {\n      marker.infoWindow.close();\n    }\n  });\n};\n\n/**\n * Remove a marker from the map and from the markers collection. This method also fires a `marker_removed` event.\n * @function removeMarker\n *\n * @param {google.maps.Polygon} polygon - The polygon to be removed.\n */\nGMaps.prototype.removeMarker = function removeMarker(marker, options = {}) {\n  const { fireEvent = true, } = options;\n  const markerIndex = this.markers.indexOf(marker);\n\n  if (markerIndex >= 0) {\n    marker.setMap(null);\n    this.markers.splice(markerIndex, 1);\n\n    if (this.markerClusterer) {\n      this.markerClusterer.removeMarker(marker);\n    }\n\n    if (fireEvent) {\n      GMaps.fire('marker_removed', marker, this);\n    }\n  }\n\n  return marker;\n};\n\n/**\n * Remove a group of markers (or all of them) from the Map and from the markers collection. This method does not fire a `marker_removed` event.\n * @function removeMarkers\n *\n * @param {array} markers - The markers to be removed. If not set, it removes all markers in the Map.\n */\nGMaps.prototype.removeMarkers = function removeMarkers(markers = this.markers) {\n  markers.forEach(marker => this.removeMarker(marker, { fireEvent: false, }));\n};\n\nexport default GMaps;\n","import GMaps, { setupEvents, arrayToLatLng, flattenArray } from './core';\nimport 'events';\n\n/**\n * Extends GMaps to use polylines and polygons.\n * @module Geometry\n */\n\nconst EVENTS = ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'];\n\n/**\n * Draw a polyline in the Map and add it to the polylines collection. This method also fires a `polyline_added` event.\n * @function drawPolyline\n *\n * @param {object} options - The `options` object should contain:\n * @param {array} options.path - Collection of coordinates (which can be either an array [lat, lng] or a google.maps.LatLng object).\n * @param {string} options.strokeColor - Color of the polyline. Can be hexadecimal or CSS name.\n * @param {float} options.strokeOpacity - Opacity of the polyline from 0.0 to 1.0.\n * @param {integer} options.strokeWeight - Polyline width in pixels.\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#PolylineOptions) and any event defined in the [\"Events\" section](https://developers.google.com/maps/documentation/javascript/reference#Polyline).\n *\n * @returns {google.maps.Polyline}\n */\nGMaps.prototype.drawPolyline = function drawPolyline(baseOptions) {\n  const { icons, strokeColor, strokeOpacity, strokeWeight, geodesic, clickable = true, editable = false, visible = true, zIndex, ...options } = baseOptions;\n  let path = [];\n\n  if (options.path.length) {\n    if (options.path[0][0] === undefined) {\n      path = [...options.path];\n    } else {\n      path = options.path.map(latLng =>\n        new google.maps.LatLng(latLng[0], latLng[1])\n      );\n    }\n  }\n\n  const polylineOptions = {\n    ...options,\n    map: this.map,\n    path,\n    strokeColor,\n    strokeOpacity,\n    strokeWeight,\n    geodesic,\n    visible,\n    clickable,\n    editable,\n    icons,\n    zIndex,\n  };\n\n  const polyline = new google.maps.Polyline(polylineOptions);\n\n  setupEvents({ events: EVENTS, object: polyline, instance: this, handlers: options, });\n\n  this.polylines.push(polyline);\n\n  GMaps.fire('polyline_added', polyline, this);\n\n  return polyline;\n};\n\n/**\n * Remove a polyline from the map and from the polylines collection. This method also fires a `polyline_removed` event.\n * @function removePolyline\n *\n * @param {google.maps.Polyline} polyline - The polyline to be removed.\n */\nGMaps.prototype.removePolyline = function removePolyline(polyline) {\n  const polylineIndex = this.polylines.indexOf(polyline);\n\n  if (polylineIndex >= 0) {\n    polyline.setMap(null);\n    this.polylines.splice(polylineIndex, 1);\n\n    GMaps.fire('polyline_removed', polyline, this);\n  }\n};\n\n/**\n * Remove all the polylines from the map and clear the polylines collection. This method does not fire a `polyline_removed` event.\n * @function removePolylines\n */\nGMaps.prototype.removePolylines = function removePolylines() {\n  this.polylines.forEach(polyline => polyline.setMap(null));\n\n  this.polylines = [];\n};\n\n/**\n * Draw a circle in the Map and it to the polygons collection.\n * @function drawCircle\n *\n * @param {object} options - The `options` object should contain:\n * @param {number} options.latitude - Latitude of the center. If `latitude` and `longitude` are set, `center`is ignored.\n * @param {number} options.longitude - Longitude of the center. If `latitude` and `longitude` are set, `center`is ignored.\n * @param {google.maps.LatLng} options.center - A `google.maps.LatLng` coordinate indicate the center. If set, `latitude` and `longitude` are ignored.\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#CircleOptions) and any event defined in the [\"Events\" section](https://developers.google.com/maps/documentation/javascript/reference#Circle).\n *\n * @returns {google.maps.Circle}\n */\nGMaps.prototype.drawCircle = function drawCircle(baseOptions) {\n  const { lat, latitude = lat, lng, longitude = lng, ...options } = baseOptions;\n  const { center = new google.maps.LatLng(latitude, longitude), } = options;\n  const polygonOptions = {\n    ...options,\n    map: this.map,\n    center,\n  };\n\n  const polygon = new google.maps.Circle(polygonOptions);\n\n  setupEvents({ events: EVENTS, object: polygon, instance: this, handlers: options, });\n\n  this.polygons.push(polygon);\n\n  return polygon;\n};\n\n/**\n * Draw a rectangle in the Map and it to the polygons collection.\n * @function drawRectangle\n *\n * @param {object} options - The `options` object should contain:\n * @param {array} options.bounds - Bi-dimensional array of latitudes and longitudes.\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#RectangleOptions) and any event defined in the [\"Events\" section](https://developers.google.com/maps/documentation/javascript/reference#Rectangle).\n *\n * @returns {google.maps.Rectangle}\n */\nGMaps.prototype.drawRectangle = function drawRectangle(baseOptions) {\n  const { bounds, ...options } = baseOptions;\n\n  const latLngBounds = new google.maps.LatLngBounds(\n    new google.maps.LatLng(bounds[0][0], bounds[0][1]),\n    new google.maps.LatLng(bounds[1][0], bounds[1][1])\n  );\n\n  const polygonOptions = {\n    ...options,\n    bounds: latLngBounds,\n    map: this.map,\n  };\n\n  const polygon = new google.maps.Rectangle(polygonOptions);\n\n  setupEvents({ events: EVENTS, object: polygon, instance: this, handlers: options, });\n\n  this.polygons.push(polygon);\n\n  return polygon;\n};\n\n/**\n * Draw a polygon in the Map and it to the polygons collection.\n * @function drawPolygon\n *\n * @param {object} options - The `options` object should contain:\n * @param {array} options.paths - Bi-dimensional array of latitudes and longitudes.\n * @param {boolean} options.useGeoJSON - If set, allows `paths` to use GeoJSON format.\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#PolygonOptions) and any event defined in the [\"Events\" section](https://developers.google.com/maps/documentation/javascript/reference#Polygon).\n *\n * @returns {google.maps.Polygon}\n */\nGMaps.prototype.drawPolygon = function drawPolygon(baseOptions) {\n  const { useGeoJSON = false, ...options } = baseOptions;\n\n  const basePaths = useGeoJSON ? options.paths : [options.paths.slice(0)];\n  let paths = [];\n\n  if (basePaths.length) {\n    if (basePaths[0].length) {\n      paths = flattenArray(\n        basePaths.map(path =>\n          arrayToLatLng(path, useGeoJSON)\n        )\n      );\n    }\n  }\n\n  const polygonOptions = {\n    ...options,\n    map: this.map,\n    paths,\n  };\n\n  const polygon = new google.maps.Polygon(polygonOptions);\n\n  setupEvents({ events: EVENTS, object: polygon, instance: this, handlers: options, });\n\n  this.polygons.push(polygon);\n\n  GMaps.fire('polygon_added', polygon, this);\n\n  return polygon;\n};\n\n/**\n * Remove a polygon from the map and from the polygons collection. This method also fires a `polygon_removed` event.\n * @function removePolygon\n *\n * @param {google.maps.Polygon} polygon - The polygon to be removed.\n */\nGMaps.prototype.removePolygon = function removePolygon(polygon) {\n  const polygonIndex = this.polygons.indexOf(polygon);\n\n  if (polygonIndex >= 0) {\n    polygon.setMap(null);\n    this.polygons.splice(polygonIndex, 1);\n\n    GMaps.fire('polygon_removed', polygon, this);\n  }\n};\n\n/**\n * Remove all the polygons from the map and clear the polygons collection. This method does not fire a `polygon_removed` event.\n * @function removePolygons\n */\nGMaps.prototype.removePolygons = function removePolygons() {\n  this.polygons.forEach(polygon => polygon.setMap(null));\n\n  this.polygons = [];\n};\n\nexport default GMaps;\n","import GMaps, { setupEventListener } from './core';\nimport './events';\n\n/**\n * Extends GMaps to use polylines and polygons.\n * @module Layers\n */\n\nGMaps.prototype.getFromFusionTables = function getFromFusionTables(baseOptions) {\n  const { events = {}, ...options } = baseOptions;\n\n  const layer = new google.maps.FusionTablesLayer(options);\n\n  Object.keys(events).forEach(eventName =>\n    setupEventListener({\n      object: layer,\n      eventName,\n      instance: this,\n      handler: events[eventName],\n    })\n  );\n\n  this.layers.push(layer);\n\n  return layer;\n};\n\n/**\n * Draw a FusionTables layer in the Map.\n * @function loadFromFusionTables\n *\n * @param {object} options - The `options` accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#FusionTablesLayerOptions).\n *\n * `options` also accepts an `events` object, which accepts only `click`.\n *\n * @returns {google.maps.FusionTablesLayer}\n */\nGMaps.prototype.loadFromFusionTables = function loadFromFusionTables(options) {\n  const layer = this.getFromFusionTables(options);\n  layer.setMap(this.map);\n\n  return layer;\n};\n\nGMaps.prototype.getFromKML = function getFromKML(baseOptions) {\n  const { url, events, ...options } = baseOptions;\n\n  const layer = new google.maps.KmlLayer(url, options);\n\n  Object.keys(events).forEach(eventName =>\n    setupEventListener({\n      object: layer,\n      eventName,\n      instance: this,\n      handler: events[eventName],\n    })\n  );\n\n  this.layers.push(layer);\n\n  return layer;\n};\n\n/**\n * Draw a KML layer in the Map.\n * @function loadFromKML\n *\n * @param {object} options - The `options` accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#KmlLayerOptions).\n *\n * `options` also accepts an `events` object, which accepts all events defined in the [\"Events\" section](https://developers.google.com/maps/documentation/javascript/reference#KmlLayer).\n *\n * @returns {google.maps.KmlLayer}\n */\nGMaps.prototype.loadFromKML = function loadFromKML(options) {\n  const layer = this.getFromKML(options);\n  layer.setMap(this.map);\n\n  return layer;\n};\n\n/**\n * Draw a layer in the Map. This method also fires a `layer_added` event.\n * @function addLayer\n *\n * @param {string} layerName - The name of a Google Maps layer, which can be: `traffic`, `transit` or `bicycling`.\n *\n * @returns {google.maps.TrafficLayer|google.maps.TransitLayer|google.maps.BicyclingLayer}\n */\nGMaps.prototype.addLayer = function addLayer(layerName, baseOptions = {}) {\n  const { filter, click, search, nearbySearch, radarSearch, textSearch, ...options } = baseOptions;\n  const { bounds, keyword, location, name, radius, rankBy, types, query, } = options;\n  let layer;\n\n  switch (layerName) {\n    case 'traffic':\n      layer = new google.maps.TrafficLayer();\n      this.singleLayers.traffic = layer;\n      break;\n    case 'transit':\n      layer = new google.maps.TransitLayer();\n      this.singleLayers.transit = layer;\n      break;\n    case 'bicycling':\n      layer = new google.maps.BicyclingLayer();\n      this.singleLayers.bicycling = layer;\n      break;\n    case 'places':\n      layer = new google.maps.places.PlacesService(this.map);\n      this.singleLayers.places = layer;\n\n      if (search || nearbySearch || radarSearch) {\n        const placeSearchRequest = {\n          bounds,\n          keyword,\n          location,\n          name,\n          radius,\n          rankBy,\n          types,\n        };\n\n        if (radarSearch) {\n          layer.radarSearch(placeSearchRequest, radarSearch);\n        }\n\n        if (search) {\n          layer.search(placeSearchRequest, search);\n        }\n\n        if (nearbySearch) {\n          layer.nearbySearch(placeSearchRequest, nearbySearch);\n        }\n      }\n\n      if (textSearch) {\n        const textSearchRequest = {\n          bounds,\n          location,\n          query,\n          radius,\n        };\n\n        layer.textSearch(textSearchRequest, textSearch);\n      }\n      break;\n    default:\n      break;\n  }\n\n  if (layer) {\n    if (typeof layer.setOptions === 'function') {\n      layer.setOptions(options);\n    }\n\n    if (typeof layer.setMap === 'function') {\n      layer.setMap(this.map);\n    }\n\n    GMaps.fire('layer_added', layer, this);\n\n    return layer;\n  }\n};\n\n/**\n * Remove a layer from the map. If the layer is a FusionTables layer or a KML layer, `removeLayer` also removes the layer from the layers collection and fires a `layer_removed` event.\n * @function removeLayer\n *\n * @param {google.maps.Polygon} polygon - The polygon to be removed.\n */\nGMaps.prototype.removeLayer = function removeLayer(layer) {\n  if (typeof layer === 'string' && this.singleLayers[layer] !== undefined) {\n    this.singleLayers[layer].setMap(null);\n\n    delete this.singleLayers[layer];\n  } else {\n    const layerIndex = this.layers.indexOf(layer);\n\n    if (layerIndex >= 0) {\n      layer.setMap(null);\n      this.layers.splice(layerIndex, 1);\n\n      GMaps.fire('layer_removed', layer, this);\n    }\n  }\n};\n\nexport default GMaps;\n","import GMaps, { latLngFromArguments, flattenArray, arrayToLatLng } from './core';\n\n/**\n * Extends GMaps to use routes.\n * @module Routes\n */\n\n/**\n * Get routes between two coordinates.\n * @function getRoutes\n *\n * @param {object} options - The `options` object should contain:\n * @param {string|google.maps.LatLng|google.maps.Place|google.maps.LatLngLiteral} options.origin - Location of origin.\n * @param {string|google.maps.LatLng|google.maps.Place|google.maps.LatLngLiteral} options.destination - Location of destination.\n * @param {string} options.travelMode - Can be `bicycling`, `driving`, `transit` or `walking`.\n * @param {array} options.waypoints - Array of [google.maps.DirectionsWaypoint](https://developers.google.com/maps/documentation/javascript/reference#DirectionsWaypoint) objects.\n * @param {function} options.callback - Function that will be executed after the results are returned.\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRequest).\n */\nGMaps.prototype.getRoutes = function getRoutes(baseOptions) {\n  const { origin, destination, travelMode = 'walking', unitSystem = 'metric', avoidHighways = false, avoidTolls = false, optimizeWaypoints = false, waypoints = [], callback, error, ...options } = baseOptions;\n\n  const travelModeId = google.maps.TravelMode[travelMode.toUpperCase()];\n  const unitSystemId = google.maps.TravelMode[unitSystem.toUpperCase()];\n\n  const requestOptions = {\n    ...options,\n    travelMode: travelModeId,\n    unitSystem: unitSystemId,\n    avoidHighways,\n    avoidTolls,\n    optimizeWaypoints,\n    waypoints,\n    origin: latLngFromArguments(origin),\n    destination: latLngFromArguments(destination),\n  };\n\n  const service = new google.maps.DirectionsService();\n\n  service.route(requestOptions, (result, status) => {\n    if (status === google.maps.DirectionsStatus.OK) {\n      if (callback) {\n        callback([...result.routes], result, status);\n      }\n    } else if (error) {\n      error(result, status);\n    }\n  });\n};\n\n/**\n * Remove all routes stored in routes collection.\n * @function removeRoutes\n */\nGMaps.prototype.removeRoutes = function removeRoutes() {\n  this.routes = [];\n};\n\n/**\n * Get elevation information for locations or routes.\n * @function getElevations\n *\n * @param {array} locations - Bi-dimensional array of latitudes and longitudes.\n * @param {boolean} path - If is true, makes a request along a path. If is false, only get elevation information on discrete locations.\n * @param {function} callback - Native callback function defined in [google.maps.ElevationService ('Methods' section)](https://developers.google.com/maps/documentation/javascript/reference#ElevationService) (`getElevationAlongPath` if `path` is true, `getElevationForLocations` if `path` is false).\n */\nGMaps.prototype.getElevations = function getElevations(baseOptions) {\n  const { path = false, samples = 256, callback, ...options } = baseOptions;\n\n  let locations = options.locations || [];\n\n  if (locations.length > 0) {\n    if (locations[0].length > 0) {\n      locations = flattenArray([locations].map(location => arrayToLatLng(location, false)));\n    }\n  }\n\n  const service = new google.maps.ElevationService();\n\n  if (!path) {\n    const requestOptions = {\n      ...options,\n      locations,\n      path,\n      samples,\n    };\n\n    service.getElevationForLocations(requestOptions, (result, status) => {\n      if (typeof callback === 'function') {\n        callback(result, status);\n      }\n    });\n  } else {\n    const requestOptions = {\n      path: locations,\n      samples,\n    };\n\n    service.getElevationAlongPath(requestOptions, (result, status) => {\n      if (typeof callback === 'function') {\n        callback(result, status);\n      }\n    });\n  }\n};\n\n/**\n * Alias for {@link GMaps#removePolylines}.\n * @function cleanRoute\n */\nGMaps.prototype.cleanRoute = GMaps.prototype.removePolylines;\n\nGMaps.prototype.renderRoute = function renderRoute(options, baseRenderOptions) {\n  const panel = ((typeof baseRenderOptions.panel === 'string') ? document.getElementById(baseRenderOptions.panel.replace('#', '')) : baseRenderOptions.panel);\n\n  const renderOptions = {\n    ...baseRenderOptions,\n    panel,\n    map: this.map,\n  };\n\n  const display = new google.maps.DirectionsRenderer(renderOptions);\n\n  this.getRoutes({\n    origin: options.origin,\n    destination: options.destination,\n    travelMode: options.travelMode,\n    waypoints: options.waypoints,\n    unitSystem: options.unitSystem,\n    error: options.error,\n    avoidHighways: options.avoidHighways,\n    avoidTolls: options.avoidTolls,\n    optimizeWaypoints: options.optimizeWaypoints,\n    callback(_, response, status) {\n      if (status === google.maps.DirectionsStatus.OK) {\n        display.setDirections(response);\n      }\n    },\n  });\n};\n\n/**\n * Draw a route using polylines. It uses the last route found by {@link GMaps#getRoutes}.\n * @function drawRoute\n *\n * @param {object} options - Accepts the same options as {@link GMaps#getRoutes}.\n * @param {string|google.maps.LatLng|google.maps.Place|google.maps.LatLngLiteral} options.origin - Location of origin.\n * @param {string|google.maps.LatLng|google.maps.Place|google.maps.LatLngLiteral} options.destination - Location of destination.\n * @param {string} options.strokeColor - Color of the polyline. Can be hexadecimal or CSS name.\n * @param {float} options.strokeOpacity - Opacity of the polyline from 0.0 to 1.0\n * @param {integer} options.strokeWeight - Polyline width in pixels.\n */\nGMaps.prototype.drawRoute = function drawRoute(options) {\n  const self = this;\n\n  this.getRoutes({\n    origin: options.origin,\n    destination: options.destination,\n    travelMode: options.travelMode,\n    waypoints: options.waypoints,\n    unitSystem: options.unitSystem,\n    error: options.error,\n    avoidHighways: options.avoidHighways,\n    avoidTolls: options.avoidTolls,\n    optimizeWaypoints: options.optimizeWaypoints,\n    callback(routes) {\n      if (routes.length > 0) {\n        const lastRoute = routes[routes.length - 1];\n        const polylineOptions = {\n          path: lastRoute.overview_path,\n          strokeColor: options.strokeColor,\n          strokeOpacity: options.strokeOpacity,\n          strokeWeight: options.strokeWeight,\n        };\n\n        if (options.icons) {\n          polylineOptions.icons = options.icons;\n        }\n\n        self.drawPolyline(polylineOptions);\n\n        if (options.callback) {\n          options.callback(lastRoute);\n        }\n      }\n    },\n  });\n};\n\n/**\n * Travel a route automatically. It uses the last route found by {@link GMaps#getRoutes}.\n * @function travelRoute\n *\n * @param {object} options - Accepts the same options as {@link GMaps#getRoutes}.\n * @param {string|google.maps.LatLng|google.maps.Place|google.maps.LatLngLiteral} options.origin - Location of origin.\n * @param {string|google.maps.LatLng|google.maps.Place|google.maps.LatLngLiteral} options.destination - Location of destination.\n * @param {object} options.route - A [google.maps.DirectionsRoute](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRoute) object. If set, `origin` and `destination` are ignored.\n * @param {function} options.start - Fired before the first step. It receives a single argument, which is a [DirectionsRoute](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRoute) object.\n * @param {function} options.step - Fired each step in the route. It receives 2 arguments, which is a [DirectionsStep](https://developers.google.com/maps/documentation/javascript/reference#DirectionsStep) object and the total length of the steps.\n * @param {function} options.end - Fired after the last step. It receives a single argument, which is a [DirectionsRoute](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRoute) object.\n */\nGMaps.prototype.travelRoute = function travelRoute(options) {\n  if (options.origin && options.destination) {\n    this.getRoutes({\n      origin: options.origin,\n      destination: options.destination,\n      travelMode: options.travelMode,\n      waypoints: options.waypoints,\n      unitSystem: options.unitSystem,\n      error: options.error,\n      callback(routes) {\n        if (routes.length === 0) {\n          return;\n        }\n\n        const lastRoute = routes[routes.length - 1];\n\n        // start callback\n        if (options.start) {\n          options.start(lastRoute);\n        }\n\n        // step callback\n        if (options.step) {\n          if (lastRoute.legs.length > 0) {\n            const { steps, } = lastRoute.legs[0];\n\n            steps.forEach((step, index) => {\n              // eslint-disable-next-line no-param-reassign\n              step.step_number = index;\n              // eslint-disable-next-line no-param-reassign\n              step.stepNumber = index;\n\n              options.step(step, steps.length - 1);\n            });\n          }\n        }\n\n        // end callback\n        if (options.end) {\n          options.end(lastRoute);\n        }\n      },\n    });\n  } else if (options.route) {\n    if (options.route.legs.length > 0) {\n      const { steps, } = options.route.legs[0];\n\n      steps.forEach((step, index) => {\n        // eslint-disable-next-line no-param-reassign\n        step.step_number = index;\n        // eslint-disable-next-line no-param-reassign\n        step.stepNumber = index;\n\n        options.step(step, steps.length - 1);\n      });\n    }\n  }\n};\n\n/**\n * Draw and travel a route automatically step by step. It uses the last route found by {@link GMaps#getRoutes}.\n * @function drawSteppedRoute\n *\n * @param {object} options - Accepts the same options as {@link GMaps#travelRoute}.\n * @param {string|google.maps.LatLng|google.maps.Place|google.maps.LatLngLiteral} options.origin - Location of origin.\n * @param {string|google.maps.LatLng|google.maps.Place|google.maps.LatLngLiteral} options.destination - Location of destination.\n * @param {object} options.route - A [google.maps.DirectionsRoute](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRoute) object. If set, `origin` and `destination` are ignored.\n * @param {string} options.strokeColor - Color of the polyline. Can be hexadecimal or CSS name.\n * @param {float} options.strokeOpacity - Opacity of the polyline from 0.0 to 1.0\n * @param {integer} options.strokeWeight - Polyline width in pixels.\n * @param {function} options.start - Fired before the first step. It receives a single argument, which is a [DirectionsRoute](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRoute) object.\n * @param {function} options.step - Fired each step in the route. It receives 2 arguments, which is a [DirectionsStep](https://developers.google.com/maps/documentation/javascript/reference#DirectionsStep) object and the total length of the steps.\n * @param {function} options.end - Fired after the last step. It receives a single argument, which is a [DirectionsRoute](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRoute) object.\n\n */\nGMaps.prototype.drawSteppedRoute = function drawSteppedRoute(options) {\n  const self = this;\n\n  this.travelRoute({\n    ...options,\n    step: function step(routeStep, stepsCount) {\n      const polylineOptions = {\n        path: routeStep.path,\n        strokeColor: options.strokeColor,\n        strokeOpacity: options.strokeOpacity,\n        strokeWeight: options.strokeWeight,\n      };\n\n      if (options.icons) {\n        polylineOptions.icons = options.icons;\n      }\n\n      self.drawPolyline(polylineOptions);\n\n      options.step(routeStep, stepsCount);\n    },\n  });\n\n  // if (options.origin && options.destination) {\n  //   this.getRoutes({\n  //     origin: options.origin,\n  //     destination: options.destination,\n  //     travelMode: options.travelMode,\n  //     waypoints: options.waypoints,\n  //     error: options.error,\n  //     callback(routes) {\n  //       if (routes.length === 0) {\n  //         return;\n  //       }\n\n  //       const route = routes[routes.length - 1];\n\n  //       // start callback\n  //       if (options.start) {\n  //         options.start(route);\n  //       }\n\n  //       // step callback\n  //       if (options.step) {\n  //         if (route.legs.length > 0) {\n  //           const { steps, } = route.legs[0];\n\n  //           steps.forEach((step, index) => {\n  //             // eslint-disable-next-line no-param-reassign\n  //             step.step_number = index;\n  //             // eslint-disable-next-line no-param-reassign\n  //             step.stepNumber = index;\n\n  //             const polylineOptions = {\n  //               path: step.path,\n  //               strokeColor: options.strokeColor,\n  //               strokeOpacity: options.strokeOpacity,\n  //               strokeWeight: options.strokeWeight,\n  //             };\n\n  //             if (options.icons) {\n  //               polylineOptions.icons = options.icons;\n  //             }\n\n  //             self.drawPolyline(polylineOptions);\n  //             options.step(step, (route.legs[0].steps.length - 1));\n  //           });\n  //         }\n  //       }\n\n  //       // end callback\n  //       if (options.end) {\n  //         options.end(route);\n  //       }\n  //     },\n  //   });\n  // } else if (options.route) {\n  //   if (options.route.legs.length > 0) {\n  //     const { steps, } = options.route.legs[0];\n\n  //     steps.forEach((step, index) => {\n  //       // eslint-disable-next-line no-param-reassign\n  //       step.step_number = index;\n  //       // eslint-disable-next-line no-param-reassign\n  //       step.stepNumber = index;\n\n  //       const polylineOptions = {\n  //         path: step.path,\n  //         strokeColor: options.strokeColor,\n  //         strokeOpacity: options.strokeOpacity,\n  //         strokeWeight: options.strokeWeight,\n  //       };\n\n  //       if (options.icons) {\n  //         polylineOptions.icons = options.icons;\n  //       }\n\n  //       self.drawPolyline(polylineOptions);\n\n  //       options.step(step);\n  //     });\n  //   }\n  // }\n};\n\nclass Route {\n  constructor(options) {\n    this.origin = options.origin;\n    this.destination = options.destination;\n    this.waypoints = options.waypoints;\n\n    this.map = options.map;\n    this.route = options.route;\n    this.step_count = 0;\n    this.steps = this.route.legs[0].steps;\n    this.steps_length = this.steps.length;\n\n    const polylineOptions = {\n      path: new google.maps.MVCArray(),\n      strokeColor: options.strokeColor,\n      strokeOpacity: options.strokeOpacity,\n      strokeWeight: options.strokeWeight,\n    };\n\n    if (options.icons) {\n      polylineOptions.icons = options.icons;\n    }\n\n    this.polyline = this.map.drawPolyline(polylineOptions).getPath();\n  }\n\n  getRoute(options) {\n    const self = this;\n\n    this.map.getRoutes({\n      origin: this.origin,\n      destination: this.destination,\n      travelMode: options.travelMode,\n      waypoints: this.waypoints || [],\n      error: options.error,\n      callback(routes) {\n        // eslint-disable-next-line prefer-destructuring\n        self.route = routes[0];\n\n        if (options.callback) {\n          options.callback.call(self);\n        }\n      },\n    });\n  }\n\n  back() {\n    if (this.step_count > 0) {\n      this.step_count -= 1;\n      const { path, } = this.route.legs[0].steps[this.step_count];\n\n      path.forEach(() => this.polyline.pop());\n    }\n  }\n\n  forward() {\n    if (this.step_count < this.steps_length) {\n      const { path, } = this.route.legs[0].steps[this.step_count];\n\n      path.forEach(coordinate => this.polyline.push(coordinate));\n\n      this.step_count += 1;\n    }\n  }\n}\n\nGMaps.Route = Route;\n\nexport default GMaps;\n","import GMaps from './core';\nimport './events';\n\n/**\n * Extends GMaps to use custom Map Types.\n * @module MapTypes\n */\n\n/**\n * Draw a custom [tile-based map type](https://developers.google.com/maps/documentation/javascript/maptypes#ImageMapTypes) in the Map, which can be used with the base map types (`hybrid`, `roadmap`, `satellite` and `terrain`).\n * @function addMapType\n *\n * @param {string} mapTypeId - A simple identifier for the custom map type.\n * @param {object} options - The `options` object should contain:\n * @param {function} options.getTileUrl - A function that returns an URL for tile-based endpoints. It receives two arguments:\n *   * `points` (google.maps.Point): a point with `x` and `y` (is not a coordinate).\n *   * `zoom` (number): a zoom level.\n * @param {google.maps.Size} options.tileSize - The size of the tile.\n *\n * @returns {google.maps.ImageMapType}\n */\nGMaps.prototype.addMapType = function addMapType(mapTypeId, options = {}) {\n  const { getTileUrl, tileSize = new google.maps.Size(256, 256), } = options;\n\n  if (typeof getTileUrl !== 'function') {\n    throw new Error(\"'getTileUrl' function required.\");\n  }\n\n  const mapType = new google.maps.ImageMapType({ getTileUrl, tileSize, });\n\n  this.map.mapTypes.set(mapTypeId, mapType);\n\n  return mapType;\n};\n\n/**\n * Draw a custom [overlay map type](https://developers.google.com/maps/documentation/javascript/maptypes#OverlayMapTypes) in the Map. This method also fires an `overlay_map_type_added` event.\n * @function addOverlayMapType\n *\n * @param {string} mapTypeId - A simple identifier for the custom map type.\n * @param {object} options - The `options` object should contain:\n * @param {function} options.getTile - A function that returns a DOM Node. It receives three arguments:\n *   * `points` (google.maps.Point): a point with `x` and `y` (is not a coordinate).\n *   * `zoom` (number): a zoom level.\n *   * `ownerDocument` (Document): The DOM document that will create the node.\n * @param {number} options.index - The index for the overlay map type. Used to set differente z levels on stacked overlay maps.\n * @param {google.maps.Size} options.tileSize - The size of the tile.\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#MapType).\n */\nGMaps.prototype.addOverlayMapType = function addOverlayMapType(options = {}) {\n  const { getTile, index = this.map.overlayMapTypes.length, ...overlayMapTypeOptions } = options;\n\n  if (typeof getTile !== 'function') {\n    throw new Error(\"'getTile' function required.\");\n  }\n\n  this.map.overlayMapTypes.insertAt(index, { ...overlayMapTypeOptions, getTile, });\n  GMaps.fire('overlay_map_type_added', this.map.overlayMapTypes[index], this);\n};\n\n/**\n * Remove a overlay map type from the map. This method also fires an `overlay_map_type_removed` event.\n * @function removeOverlayMapType\n *\n * @param {google.maps.Polyline} polyline - The polyline to be removed.\n */\nGMaps.prototype.removeOverlayMapType = function removeOverlayMapType(index) {\n  const overlayMapType = this.map.overlayMapTypes[index];\n\n  this.map.overlayMapTypes.removeAt(index);\n  GMaps.fire('overlay_map_type_removed', overlayMapType, this);\n};\n\nexport default GMaps;\n","import GMaps from './core';\n\n/**\n * Extends GMaps to add styled map types.\n * @module Styles\n */\n\n/**\n * Add a [styled map type](https://developers.google.com/maps/documentation/javascript/maptypes#StyledMaps) in the Map, which can be used with the base map types (`hybrid`, `roadmap`, `satellite` and `terrain`).\n * @function addStyle\n *\n * @param {object} options - The `options` object should contain:\n * @param {string} options.mapTypeId - A simple identifier for the styled map type.\n * @param {string} options.styledMapName - A name for the styled map type. It will be displayed in the map type control.\n * @param {array} options.styles - An array of (`MapTypeStyle`)[https://developers.google.com/maps/documentation/javascript/reference#MapTypeStyle] objects.\n */\nGMaps.prototype.addStyle = function addStyle(options) {\n  const styledMapType = new google.maps.StyledMapType(options.styles, { name: options.styledMapName, });\n\n  this.map.mapTypes.set(options.mapTypeId, styledMapType);\n};\n\n/**\n * Set a [styled map type](https://developers.google.com/maps/documentation/javascript/maptypes#StyledMaps) to the Map. The map type should be defined before with {@link GMaps#addStyle}.\n * @function setStyle\n *\n * @param {string} mapTypeId - The styled map type's identifier.\n */\nGMaps.prototype.setStyle = function setStyle(mapTypeId) {\n  this.map.setMapTypeId(mapTypeId);\n};\n\nexport default GMaps;\n","import GMaps from './core';\nimport './events';\nimport './controls';\nimport './geofences';\nimport './markers';\nimport './overlays';\nimport './geometry';\nimport './layers';\nimport './routes';\nimport './static';\nimport './map_types';\nimport './styles';\nimport './streetview';\nimport './polyfills';\nimport './utils';\n\nexport default GMaps;\n"],"sourceRoot":""}