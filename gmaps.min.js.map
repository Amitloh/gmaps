{"version":3,"sources":["webpack://GMaps/webpack/bootstrap","webpack://GMaps/./lib/core.js","webpack://GMaps/(webpack)/buildin/global.js","webpack://GMaps/./lib/events.js","webpack://GMaps/./lib/polyfills.js","webpack://GMaps/./lib/controls.js","webpack://GMaps/./lib/overlays.js","webpack://GMaps/./node_modules/events/events.js","webpack://GMaps/./lib/static.js","webpack://GMaps/./lib/streetview.js","webpack://GMaps/./lib/utils.js","webpack://GMaps/./lib/geofences.js","webpack://GMaps/./lib/markers.js","webpack://GMaps/./lib/geometry.js","webpack://GMaps/./lib/layers.js","webpack://GMaps/./lib/routes.js","webpack://GMaps/./lib/map_types.js","webpack://GMaps/./lib/styles.js","webpack://GMaps/./lib/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","latLngFromArguments","_len","arguments","length","args","Array","_key","google","maps","LatLng","flattenArray","array","reduce","collection","item","concat","arrayToLatLng","coordinates","useGeoJSON","map","coordinate","_typeof","firstCoordinate","secondCoordinate","coordsToLatLngs","getElementById","id","context","sanitizedId","replace","global","$","document","getElement","selectorOrElement","match","className","sanitizedClassName","getElementsByClassName","setupEventListener","_ref","eventName","instance","handler","event","addListener","undefined","hideContextMenu","setupEvents","_ref2","events","handlers","forEach","MAP_EVENTS","GMAPS_MENU_ID","GMaps","_this","this","baseOptions","_classCallCheck","window","Error","el","div","_baseOptions$element","element","lat","_baseOptions$latitude","latitude","lng","_baseOptions$longitud","longitude","_baseOptions$center","center","_baseOptions$zoom","zoom","_baseOptions$mapType","mapType","_baseOptions$zoomCont","zoomControlOpt","style","position","_baseOptions$panContr","panControl","_baseOptions$zoomCont2","zoomControl","_baseOptions$mapTypeC","mapTypeControl","_baseOptions$scaleCon","scaleControl","_baseOptions$streetVi","streetViewControl","_baseOptions$overview","overviewMapControl","width","height","markerClusterer","enableNewStyle","options","_objectWithoutProperties","mapBaseOptions","mapTypeId","MapTypeId","toUpperCase","mapControlsOptions","zoomControlOptions","ZoomControlStyle","ControlPosition","filteredOptions","keys","hash","includes","_objectSpread","_defineProperty","Math","ceil","random","Date","now","contextMenus","visualRefresh","scrollWidth","offsetWidth","scrollHeight","offsetHeight","mapOptions","Map","controls","overlays","layers","singleLayers","markers","polylines","routes","polygons","infoWindow","overlayElement","registeredEvents","apply","rightclick","buildContextMenu","control","_this2","contextMenuElement","html","title","join","innerHTML","_toConsumableArray","getElementsByTagName","contextMenuItem","clearListeners","addDomListenerOnce","contextMenuItemListenerEvent","preventDefault","target","action","left","top","getBoundingClientRect","rectangle","x","scrollX","pageXOffset","y","scrollY","pageYOffset","offsetParent","iterator","offsetLeft","offsetTop","findAbsolutePosition","pixel","_this3","overlay","OverlayView","setMap","draw","projection","getProjection","marker","getPosition","fromLatLngToContainerPixel","buildContextMenuHTML","setTimeout","display","_this4","option","createElement","minWidth","background","listStyle","padding","boxShadow","body","appendChild","addDomListener","relatedTarget","contains","trigger","latLngs","bounds","LatLngBounds","latLng","extend","fitBounds","filter","visible","fitLatLngBounds","_len2","_key2","callback","pop","panTo","magnitude","getZoom","setZoom","methodName","_len3","_key3","g","Function","e","customEvents","on","indexOf","registeredEvent","push","off","once","addListenerOnce","fire","eventArguments","slice","Polygon","getBounds","path","paths","getPaths","getLength","getAt","containsLatLng","inPoly","numPaths","numPoints","j","vertex1","vertex2","Circle","geometry","spherical","computeDistanceBetween","getCenter","getRadius","Rectangle","Marker","setFences","fences","addFence","fence","getId","searchElement","TypeError","len","Number","Infinity","floor","abs","k","max","addControl","_ref$style","classes","content","_ref$events","disableDefaultStyles","cursor","fontFamily","fontSize","HTMLElement","index","createControl","removeControl","controlIndex","splice","controlsForPosition","controlIndexInCollection","removeAt","STOP_PROPAGATION_EVENTS","drawOverlay","self","_baseOptions$autoShow","autoShow","_baseOptions$position","_baseOptions$layer","layer","_baseOptions$horizont","horizontalOffset","_baseOptions$vertical","verticalOffset","verticalAlign","horizontalAlign","onAdd","borderStyle","borderWidth","zIndex","panes","getPanes","navigator","userAgent","toLowerCase","all","cancelBubble","returnValue","stopPropagation","click","overlayMouseTarget","fromLatLngToDivPixel","children","contentHeight","clientHeight","contentWidth","clientWidth","show","onRemove","remove","parentNode","removeChild","removeOverlay","overlayIndex","removeOverlays","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","isNaN","EventEmitter","init","_events","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","type","listener","prepend","existing","warning","newListener","emit","unshift","warned","w","String","emitter","count","console","warn","_onceWrap","state","fired","wrapFn","wrapped","removeListener","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","set","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","err","message","listeners","prependListener","prependOnceListener","list","originalListener","shift","spliceOne","removeAllListeners","rawListeners","eventNames","parseColor","color","opacity","parsedColor","min","parseFloat","toString","toImage","_options$size","size","staticMapOptions","polyline","encoding","encodePath","getPath","strokeColor","strokeOpacity","strokeWeight","staticMapURL","url","address","_baseOptions$markers","styles","_baseOptions$size","defaultRoot","location","protocol","root","parameters","encodeURI","styleParameters","featureType","elementType","stylers","styler","buildStyleParameters","markerParameters","_marker$latitude","_marker$longitude","icon","label","markerOptions","buildMarkerParameters","polylineParameters","parseInt","fillColor","fillOpacity","buildPathParameters","dpi","devicePixelRatio","STREETVIEW_EVENTS","createPanorama","_baseOptions$lat","_baseOptions$lng","streetViewOptions","panorama","setStreetView","_baseOptions$latitude2","_baseOptions$longitud2","_baseOptions$instance","containerElement","StreetViewPanorama","geolocate","completeCallback","always","complete","geolocation","getCurrentPosition","success","not_supported","geocode","_baseOptions$location","geocoder","Geocoder","geocodeOptions","checkGeofence","lagLng","checkMarkerGeofence","outsideCallback","INFO_WINDOW_EVENTS","MARKER_EVENTS","MARKER_MOUSE_EVENTS","createMarker","details","outside","InfoWindow","fromLatLngToPoint","hideInfoWindows","open","addMarker","gm_accessors_","_options$latitude","_options$longitude","addMarkers","close","removeMarker","_options$fireEvent","fireEvent","markerIndex","removeMarkers","EVENTS","drawPolyline","icons","geodesic","_ref$clickable","clickable","_ref$editable","editable","_ref$visible","geometry_objectWithoutProperties","polylineOptions","Polyline","removePolyline","polylineIndex","removePolylines","drawCircle","_options$center","polygonOptions","geometry_objectSpread","polygon","drawRectangle","drawPolygon","_baseOptions$useGeoJS","basePaths","removePolygon","polygonIndex","removePolygons","getFromFusionTables","_baseOptions$events","layers_objectWithoutProperties","FusionTablesLayer","loadFromFusionTables","getFromKML","KmlLayer","loadFromKML","addLayer","layerName","search","nearbySearch","radarSearch","textSearch","keyword","radius","rankBy","types","query","TrafficLayer","traffic","TransitLayer","transit","BicyclingLayer","bicycling","places","PlacesService","placeSearchRequest","textSearchRequest","setOptions","removeLayer","layerIndex","getRoutes","origin","destination","_baseOptions$travelMo","travelMode","_baseOptions$unitSyst","unitSystem","_baseOptions$avoidHig","avoidHighways","_baseOptions$avoidTol","avoidTolls","_baseOptions$optimize","optimizeWaypoints","_baseOptions$waypoint","waypoints","requestOptions","routes_objectSpread","routes_objectWithoutProperties","TravelMode","DirectionsService","route","result","status","DirectionsStatus","OK","routes_toConsumableArray","removeRoutes","getElevations","_baseOptions$path","_baseOptions$samples","samples","locations","service","ElevationService","getElevationAlongPath","getElevationForLocations","cleanRoute","renderRoute","baseRenderOptions","panel","renderOptions","DirectionsRenderer","_","response","setDirections","drawRoute","lastRoute","overview_path","travelRoute","start","step","legs","steps","step_number","stepNumber","end","drawSteppedRoute","routeStep","stepsCount","Route","step_count","steps_length","MVCArray","addMapType","getTileUrl","_options$tileSize","tileSize","Size","ImageMapType","mapTypes","addOverlayMapType","getTile","_options$index","overlayMapTypes","overlayMapTypeOptions","map_types_objectWithoutProperties","insertAt","map_types_objectSpread","removeOverlayMapType","overlayMapType","addStyle","styledMapType","StyledMapType","styledMapName","setStyle","setMapTypeId"],"mappings":"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","file":"gmaps.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","export const latLngFromArguments = (...args) => {\n  if (typeof args[0][1] === 'number' && typeof args[0][1] === 'number') {\n    return new google.maps.LatLng(args[0][0], args[0][1]);\n  }\n\n  return args[0];\n};\n\nexport const flattenArray = array =>\n  array.reduce((collection, item) => collection.concat(item), []);\n\nexport const coordsToLatLngs = (coordinates, useGeoJSON) => {\n  const firstCoordinate = useGeoJSON ? coordinates[1] : coordinates[0];\n  const secondCoordinate = useGeoJSON ? coordinates[0] : coordinates[1];\n\n  return new google.maps.LatLng(firstCoordinate, secondCoordinate);\n};\n\nexport const arrayToLatLng = (coordinates, useGeoJSON) =>\n  coordinates.map((coordinate) => {\n    if (!(coordinate instanceof google.maps.LatLng)) {\n      if (coordinate.length && typeof coordinate[0] === 'object') {\n        return arrayToLatLng(coordinate, useGeoJSON);\n      }\n\n      return coordsToLatLngs(coordinate, useGeoJSON);\n    }\n\n    return coordinate;\n  });\n\nconst getElementsByClassName = (className, context) => {\n  const sanitizedClassName = className.replace(/^\\./, '');\n\n  if (typeof global.$ === 'function') {\n    return $(`.${sanitizedClassName}`, context)[0];\n  }\n\n  return global.document.getElementsByClassName(sanitizedClassName)[0];\n};\n\nexport const getElementById = (id, context) => {\n  const sanitizedId = id.replace(/^#/, '');\n\n  if (typeof global.$ === 'function') {\n    const elements = $(`#${sanitizedId}`, context) || [];\n\n    return elements[0];\n  }\n\n  return global.document.getElementById(sanitizedId);\n};\n\nconst getElement = (selectorOrElement, context) => {\n  if (typeof selectorOrElement === 'string') {\n    return selectorOrElement.match(/^#/) ? getElementById(selectorOrElement, context) : getElementsByClassName(selectorOrElement, context);\n  }\n\n  return selectorOrElement;\n};\n\nexport const findAbsolutePosition = (element) => {\n  let left = 0;\n  let top = 0;\n\n  if (element.getBoundingClientRect) {\n    const rectangle = element.getBoundingClientRect();\n    const x = -(window.scrollX ? window.scrollX : window.pageXOffset);\n    const y = -(window.scrollY ? window.scrollY : window.pageYOffset);\n\n    return [rectangle.left - x, rectangle.top - y];\n  }\n\n  if (element.offsetParent) {\n    let iterator = element;\n\n    do {\n      left += iterator.offsetLeft;\n      top += iterator.offsetTop;\n    } while ((iterator = iterator.offsetParent));\n  }\n\n  return [left, top];\n};\n\nexport const setupEventListener = ({ object, eventName, instance, handler, }) => {\n  google.maps.event.addListener(object, eventName, (event = instance) => {\n    handler.call(instance, event);\n\n    if (instance.hideContextMenu) {\n      instance.hideContextMenu();\n    }\n  });\n};\n\nexport const setupEvents = ({ events, object, instance, handlers, }) =>\n  events.forEach((eventName) => {\n    if (handlers[eventName]) {\n      setupEventListener({\n        object,\n        eventName,\n        instance,\n        handler: handlers[eventName],\n      });\n    }\n  });\n\nconst MAP_EVENTS = [\n  'bounds_changed', 'center_changed', 'click', 'dblclick', 'drag',\n  'dragend', 'dragstart', 'idle', 'maptypeid_changed',\n  'mousemove', 'mouseout', 'mouseover', 'projection_changed',\n  'resize', 'tilesloaded', 'zoom_changed'\n];\nconst GMAPS_MENU_ID = 'gmaps_context_menu';\n\n/**\n * GMaps is a wrapper for Google Maps JavaScript API. Its goal is to simplify Google Maps usage by performing complex tasks with fewer lines of code.\n */\nclass GMaps {\n  /**\n   * Creates a new GMaps instance, including a Google Maps map.\n   * @param {object} options - `options` accepts all the [MapOptions](https://developers.google.com/maps/documentation/javascript/reference#MapOptions) and [events](https://developers.google.com/maps/documentation/javascript/reference#Map) listed in the Google Maps API. Also accepts:\n   * * `latitude` (number): Latitude of the map's center\n   * * `longitude` (number): Longitude of the map's center\n   * * `element` (string or HTMLElement): container where the map will be rendered\n   * * `markerClusterer` (function): A function to create a marker cluster. You can use MarkerClusterer or MarkerClustererPlus.\n   */\n  constructor(baseOptions = {}) {\n    if (!window.google || !window.google.maps) {\n      throw new Error('Google Maps JavaScript API is required. Check: https://developers.google.com/maps/documentation/javascript/tutorial');\n    }\n\n    const {\n      el,\n      div,\n      context,\n      element = getElement(el || div, context),\n      lat,\n      latitude = lat,\n      lng,\n      longitude = lng,\n      center = new google.maps.LatLng(latitude, longitude),\n      zoom = 15,\n      mapType = 'roadmap',\n      zoomControlOpt = {\n        style: 'DEFAULT',\n        position: 'TOP_LEFT',\n      },\n      panControl = true,\n      zoomControl = true,\n      mapTypeControl = true,\n      scaleControl = true,\n      streetViewControl = true,\n      overviewMapControl = true,\n      width,\n      height,\n      markerClusterer,\n      enableNewStyle,\n      ...options\n    } = baseOptions;\n\n    if (!element) {\n      throw new Error('No element defined. Pass an `element` option in GMaps.');\n    }\n\n    const mapTypeId = google.maps.MapTypeId[mapType.toUpperCase()];\n\n    const mapBaseOptions = {\n      zoom,\n      center,\n      mapTypeId,\n    };\n\n    const mapControlsOptions = {\n      panControl,\n      zoomControl,\n      zoomControlOptions: {\n        style: google.maps.ZoomControlStyle[zoomControlOpt.style],\n        position: google.maps.ControlPosition[zoomControlOpt.position],\n      },\n      mapTypeControl,\n      scaleControl,\n      streetViewControl,\n      overviewMapControl,\n    };\n\n    const filteredOptions = Object.keys(options).reduce((hash, key) => {\n      if (MAP_EVENTS.includes(key)) {\n        return hash;\n      }\n\n      return { ...hash, [key]: options[key], };\n    }, {});\n\n    this.id = Math.ceil(Math.random() * Date.now());\n\n    GMaps.contextMenus[this.id] = {};\n\n    google.maps.visualRefresh = enableNewStyle;\n\n    /**\n     * HTML element where the Google Maps map is rendered\n     *\n     * @type {HTMLElement}\n     */\n    this.element = element;\n    this.element.style.width = width || this.element.scrollWidth || this.element.offsetWidth;\n    this.element.style.height = height || this.element.scrollHeight || this.element.offsetHeight;\n\n    const mapOptions = {\n      ...filteredOptions,\n      ...mapBaseOptions,\n      ...mapControlsOptions,\n    };\n\n    this.map = new google.maps.Map(this.element, mapOptions);\n    /**\n     * Collection of custom controls in the map UI\n     *\n     * @type {array}\n     */\n    this.controls = [];\n    /**\n     * Collection of map's overlays\n     *\n     * @type {array}\n     */\n    this.overlays = [];\n    /**\n     * Collection of KML/GeoRSS and FusionTable layers\n     *\n     * @type {array}\n     */\n    this.layers = [];\n    /**\n     * Collection of data layers (See {@link GMaps#addLayer})\n     *\n     * @type {object}\n     */\n    this.singleLayers = {};\n    /**\n     * Collection of map's markers\n     *\n     * @type {array}\n     */\n    this.markers = [];\n    /**\n     * Collection of map's lines\n     *\n     * @type {array}\n     */\n    this.polylines = [];\n    /**\n     * Collection of map's routes requested by {@link GMaps#getRoutes}, {@link GMaps#renderRoute}, {@link GMaps#drawRoute}, {@link GMaps#travelRoute} or {@link GMaps#drawSteppedRoute}\n     *\n     * @type {array}\n     */\n    this.routes = [];\n    /**\n     * Collection of map's polygons\n     *\n     * @type {array}\n     */\n    this.polygons = [];\n    this.infoWindow = null;\n    this.overlayElement = null;\n    /**\n     * Current map's zoom\n     *\n     * @type {number}\n     */\n    this.zoom = zoom;\n\n    this.registeredEvents = {};\n\n    if (markerClusterer) {\n      /**\n       * Marker Clusterer instance\n       *\n       * @type {object}\n       */\n      this.markerClusterer = markerClusterer.apply(this, [this.map]);\n    }\n\n    google.maps.event.addListener(this.map, 'zoom_changed', this.hideContextMenu);\n\n    setupEvents({ events: MAP_EVENTS, object: this.map, instance: this, handlers: options, });\n\n    google.maps.event.addListener(this.map, 'rightclick', (event) => {\n      if (options.rightclick) {\n        options.rightclick.call(this, event);\n      }\n\n      if (GMaps.contextMenus[this.id].map) {\n        this.buildContextMenu('map', event);\n      }\n    });\n  }\n\n  buildContextMenuHTML(control, event) {\n    if (!getElementById(GMAPS_MENU_ID)) {\n      return;\n    }\n\n    const contextMenuElement = getElementById(GMAPS_MENU_ID);\n    const options = GMaps.contextMenus[this.id][control];\n\n    const html = Object.keys(options).map(key =>\n      `<li><a id=\"${control}_${key}\" href=\"#\">${options[key].title}</a></li>`\n    ).join('');\n\n    contextMenuElement.innerHTML = html;\n\n    const contextMenuItems = contextMenuElement.getElementsByTagName('a');\n\n    [...contextMenuItems].forEach((contextMenuItem) => {\n      const contextMenuItemListener = (contextMenuItemListenerEvent) => {\n        contextMenuItemListenerEvent.preventDefault();\n\n        options[contextMenuItemListenerEvent.target.id.replace(`${control}_`, '')].action.call(this, event);\n        this.hideContextMenu();\n      };\n\n      google.maps.event.clearListeners(contextMenuItem, 'click');\n      google.maps.event.addDomListenerOnce(contextMenuItem, 'click', contextMenuItemListener, false);\n    });\n\n    const position = findAbsolutePosition(this.element);\n    const left = position[0] + event.pixel.x - 15;\n    const top = position[1] + event.pixel.y - 15;\n\n    contextMenuElement.style.left = `${left}px`;\n    contextMenuElement.style.top = `${top}px`;\n  }\n\n  buildContextMenu(control, event) {\n    if (control === 'marker') {\n      // eslint-disable-next-line no-param-reassign\n      event.pixel = {};\n\n      const overlay = new google.maps.OverlayView();\n      overlay.setMap(this.map);\n\n      overlay.draw = () => {\n        const projection = overlay.getProjection();\n        const position = event.marker.getPosition();\n\n        // eslint-disable-next-line no-param-reassign\n        event.pixel = projection.fromLatLngToContainerPixel(position);\n\n        this.buildContextMenuHTML(control, event);\n      };\n    } else {\n      this.buildContextMenuHTML(control, event);\n    }\n\n    const contextMenuElement = getElementById(GMAPS_MENU_ID);\n\n    setTimeout(() => {\n      contextMenuElement.style.display = 'block';\n    }, 0);\n  }\n\n  /**\n   * Add a context menu for a map or a marker.\n   *\n   * @param {object} options - The `options` object should contain:\n   * * `control` (string): Kind of control the context menu will be attached. Can be \"map\" or \"marker\".\n   * * `options` (array): A collection of context menu items:\n   *   * `title` (string): Item's title shown in the context menu.\n   *   * `name` (string): Item's identifier.\n   *   * `action` (function): Function triggered after selecting the context menu item.\n   */\n  setContextMenu(options) {\n    GMaps.contextMenus[this.id][options.control] = {};\n\n    Object.keys(options.options).forEach((key) => {\n      const option = options.options[key];\n\n      GMaps.contextMenus[this.id][options.control][option.name] = {\n        title: option.title,\n        action: option.action,\n      };\n    });\n\n    let contextMenuElement = getElementById(GMAPS_MENU_ID);\n\n    if (!contextMenuElement) {\n      contextMenuElement = document.createElement('ul');\n\n      contextMenuElement.id = GMAPS_MENU_ID;\n      contextMenuElement.style.display = 'none';\n      contextMenuElement.style.position = 'absolute';\n      contextMenuElement.style.minWidth = '100px';\n      contextMenuElement.style.background = 'white';\n      contextMenuElement.style.listStyle = 'none';\n      contextMenuElement.style.padding = '8px';\n      contextMenuElement.style.boxShadow = '2px 2px 6px #ccc';\n\n      document.body.appendChild(contextMenuElement);\n    }\n\n    google.maps.event.addDomListener(contextMenuElement, 'mouseout', (event) => {\n      if (!event.relatedTarget || !event.target.contains(event.relatedTarget)) {\n        window.setTimeout(() => {\n          contextMenuElement.style.display = 'none';\n        }, 500);\n      }\n    }, false);\n  }\n\n  /**\n   * Hide the current context menu\n   */\n  hideContextMenu() {\n    const contextMenuElement = getElementById(GMAPS_MENU_ID);\n\n    if (contextMenuElement) {\n      contextMenuElement.style.display = 'none';\n    }\n  }\n\n  /**\n   * Trigger a `resize` event, useful if you need to repaint the current map (for changes in the viewport or display / hide actions).\n   */\n  refresh() {\n    google.maps.event.trigger(this.map, 'resize');\n  }\n\n  /**\n   * Adjust the map zoom to include all the coordinates in the `latLngs` array.\n   *\n   * @param {array} latLngs - Collection of `google.maps.LatLng` objects.\n   */\n  fitLatLngBounds(latLngs) {\n    const bounds = new google.maps.LatLngBounds();\n\n    latLngs.forEach(latLng => bounds.extend(latLng));\n\n    this.map.fitBounds(bounds);\n  }\n\n  /**\n   * Adjust the map zoom to include all the markers added in the map.\n   */\n  fitZoom() {\n    const latLngs = this.markers\n      .filter(marker => marker.visible)\n      .map(marker => marker.getPosition());\n\n    this.fitLatLngBounds(latLngs);\n  }\n\n  /**\n   * Center the map using the `lat` and `lng` coordinates.\n   *\n   * @param {number} lat - Latitude of the coordinate.\n   * @param {number} lng - Longitude of the coordinate.\n   * @param {function} [callback] - Callback that will be executed after the map is centered.\n   */\n  setCenter(...args) {\n    const latLng = latLngFromArguments(args);\n    const callback = args.pop();\n\n    this.map.panTo(latLng);\n\n    if (typeof callback === 'function') {\n      callback.call(this);\n    }\n  }\n\n  /**\n   * Return the HTML element container of the map.\n   *\n   * @returns {HTMLElement} the element container.\n   */\n  getElement() {\n    return this.element;\n  }\n\n  /**\n   * Increase the map's zoom.\n   *\n   * @param {number} [magnitude] - The number of times the map will be zoomed in.\n   */\n  zoomIn(magnitude = 1) {\n    this.zoom = this.map.getZoom() + magnitude;\n    this.map.setZoom(this.zoom);\n  }\n\n  /**\n   * Decrease the map's zoom.\n   *\n   * @param {number} [magnitude] - The number of times the map will be zoomed out.\n   */\n  zoomOut(magnitude = 1) {\n    this.zoom = this.map.getZoom() - magnitude;\n    this.map.setZoom(this.zoom);\n  }\n}\n\nGMaps.contextMenus = {};\n\nconst googleMapsMapMethods = Object.keys(google.maps.Map.prototype)\n  .filter(key => (typeof google.maps.Map.prototype[key] === 'function' && !GMaps.prototype[key]));\n\ngoogleMapsMapMethods.forEach((methodName) => {\n  // eslint-disable-next-line func-names\n  GMaps.prototype[methodName] = function (...args) {\n    return this.map[methodName].apply(this.map, args);\n  };\n});\n\nexport default GMaps;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import GMaps from './core';\n\n/**\n * Extends GMaps to bind and trigger events.\n * @module Events\n */\n\n/**\n * Collection of custom events that can be registered and fired.\n *\n * @type {array}\n */\nGMaps.customEvents = ['marker_added', 'marker_removed', 'polyline_added', 'polyline_removed', 'polygon_added', 'polygon_removed', 'layer_added', 'layer_removed', 'overlay_map_type_added', 'overlay_map_type_removed', 'overlay_added', 'overlay_removed', 'geolocated', 'geolocation_failed'];\n\n/**\n * Add an event (native or custom) to an object.\n * @function on\n *\n * @param {string} eventName - The name of the event. It can be any of the native events from Google Maps, or the ones described in `GMaps.customEvents`.\n * @param {object} target - The target of the event. It can be a native object from Google Maps, (such as a google.maps.Map, google.maps.Marker, etc.), or a GMaps instance.\n * @param {function} handler - The handler (often called listener) of the event. Is a function that will be executed every time the event is fired.\n *\n * @returns {object}\n */\nGMaps.on = (eventName, object, handler) => {\n  let target = object;\n\n  if (GMaps.customEvents.indexOf(eventName) === -1) {\n    if (target instanceof GMaps) {\n      target = target.map;\n    }\n\n    return google.maps.event.addListener(target, eventName, handler);\n  }\n\n  const registeredEvent = {\n    handler,\n    eventName,\n  };\n\n  target.registeredEvents[eventName] = target.registeredEvents[eventName] || [];\n  target.registeredEvents[eventName].push(registeredEvent);\n\n  return registeredEvent;\n};\n\n/**\n * Remove an event (native or custom) to an object.\n * @function off\n *\n * @param {string} eventName - The name of the event. It can be any of the native events from Google Maps, or the ones described in `GMaps.customEvents`.\n * @param {object} target - The target of the event. It can be a native object from Google Maps, (such as a google.maps.Map, google.maps.Marker, etc.), or a GMaps instance.\n */\nGMaps.off = (eventName, object) => {\n  let target = object;\n\n  if (GMaps.customEvents.indexOf(eventName) === -1) {\n    if (target instanceof GMaps) {\n      target = target.map;\n    }\n\n    google.maps.event.clearListeners(target, eventName);\n  } else {\n    target.registeredEvents[eventName] = [];\n  }\n};\n\n/**\n * Add a native event that will be removed from the target after it has been executed once.\n * @function once\n *\n * @param {string} eventName - The name of the event. It has to be any of the native events from Google Maps.\n * @param {object} target - The target of the event. It has to be a native object from Google Maps, such as a google.maps.Map, google.maps.Marker, etc.\n * @param {function} handler - The handler (often called listener) of the event. Is a function that will be executed when the event is fired the first time.\n *\n * @returns {object}\n */\nGMaps.once = (eventName, object, handler) => {\n  let target = object;\n\n  if (GMaps.customEvents.indexOf(eventName) === -1) {\n    if (target instanceof GMaps) {\n      target = target.map;\n    }\n\n    return google.maps.event.addListenerOnce(target, eventName, handler);\n  }\n\n  return undefined;\n};\n\n/**\n * Trigger an event (native or custom) and execute all the handlers registered previously.\n * @function fire\n *\n * @param {string} eventName - The name of the event. It can be any of the native events from Google Maps, or the ones described in `GMaps.customEvents`.\n * @param {object} target - The target of the event. It can be a native object from Google Maps, (such as a google.maps.Map, google.maps.Marker, etc.), or a GMaps instance.\n * @param {object} context - The context for the event handler (represented by `this` keyword inside the handler).\n *\n * @returns {object}\n */\nGMaps.fire = (eventName, object, context) => {\n  if (GMaps.customEvents.indexOf(eventName) === -1) {\n    // eslint-disable-next-line no-undef\n    const eventArguments = Array.prototype.slice.apply(arguments).slice(2);\n    google.maps.event.trigger(object, eventName, eventArguments);\n  } else if (eventName in context.registeredEvents) {\n    context.registeredEvents[eventName].forEach(registeredEvent =>\n      registeredEvent.handler.call(context, object)\n    );\n  }\n};\n\nGMaps.prototype.on = function on(eventName, handler) {\n  return GMaps.on(eventName, this, handler);\n};\n\nGMaps.prototype.off = function off(eventName) {\n  GMaps.off(eventName, this);\n};\n\nGMaps.prototype.once = function once(eventName, handler) {\n  return GMaps.once(eventName, this, handler);\n};\n\nexport default GMaps;\n","/* eslint-disable */\nif (typeof window.google === 'object' && window.google.maps) {\n  //==========================\n  // Polygon containsLatLng\n  // https://github.com/tparkin/Google-Maps-Point-in-Polygon\n  // Poygon getBounds extension - google-maps-extensions\n  // http://code.google.com/p/google-maps-extensions/source/browse/google.maps.Polygon.getBounds.js\n  if (!google.maps.Polygon.prototype.getBounds) {\n    google.maps.Polygon.prototype.getBounds = function() {\n      var bounds = new google.maps.LatLngBounds();\n      var paths = this.getPaths();\n      var path;\n\n      for (var p = 0; p < paths.getLength(); p++) {\n        path = paths.getAt(p);\n        for (var i = 0; i < path.getLength(); i++) {\n          bounds.extend(path.getAt(i));\n        }\n      }\n\n      return bounds;\n    };\n  }\n\n  if (!google.maps.Polygon.prototype.containsLatLng) {\n    // Polygon containsLatLng - method to determine if a latLng is within a polygon\n    google.maps.Polygon.prototype.containsLatLng = function(latLng) {\n      // Exclude points outside of bounds as there is no way they are in the poly\n      var bounds = this.getBounds();\n\n      if (bounds !== null && !bounds.contains(latLng)) {\n        return false;\n      }\n\n      // Raycast point in polygon method\n      var inPoly = false;\n\n      var numPaths = this.getPaths().getLength();\n      for (var p = 0; p < numPaths; p++) {\n        var path = this.getPaths().getAt(p);\n        var numPoints = path.getLength();\n        var j = numPoints - 1;\n\n        for (var i = 0; i < numPoints; i++) {\n          var vertex1 = path.getAt(i);\n          var vertex2 = path.getAt(j);\n\n          if (vertex1.lng() < latLng.lng() && vertex2.lng() >= latLng.lng() || vertex2.lng() < latLng.lng() && vertex1.lng() >= latLng.lng()) {\n            if (vertex1.lat() + (latLng.lng() - vertex1.lng()) / (vertex2.lng() - vertex1.lng()) * (vertex2.lat() - vertex1.lat()) < latLng.lat()) {\n              inPoly = !inPoly;\n            }\n          }\n\n          j = i;\n        }\n      }\n\n      return inPoly;\n    };\n  }\n\n  if (!google.maps.Circle.prototype.containsLatLng) {\n    google.maps.Circle.prototype.containsLatLng = function(latLng) {\n      if (google.maps.geometry) {\n        return google.maps.geometry.spherical.computeDistanceBetween(this.getCenter(), latLng) <= this.getRadius();\n      }\n      else {\n        return true;\n      }\n    };\n  }\n\n  google.maps.Rectangle.prototype.containsLatLng = function(latLng) {\n    return this.getBounds().contains(latLng);\n  };\n\n  google.maps.LatLngBounds.prototype.containsLatLng = function(latLng) {\n    return this.contains(latLng);\n  };\n\n  google.maps.Marker.prototype.setFences = function(fences) {\n    this.fences = fences;\n  };\n\n  google.maps.Marker.prototype.addFence = function(fence) {\n    this.fences.push(fence);\n  };\n\n  google.maps.Marker.prototype.getId = function() {\n    return this['__gm_id'];\n  };\n}\n\n//==========================\n// Array indexOf\n// https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/indexOf\nif (!Array.prototype.indexOf) {\n  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n      \"use strict\";\n      if (this == null) {\n          throw new TypeError();\n      }\n      var t = Object(this);\n      var len = t.length >>> 0;\n      if (len === 0) {\n          return -1;\n      }\n      var n = 0;\n      if (arguments.length > 1) {\n          n = Number(arguments[1]);\n          if (n != n) { // shortcut for verifying if it's NaN\n              n = 0;\n          } else if (n != 0 && n != Infinity && n != -Infinity) {\n              n = (n > 0 || -1) * Math.floor(Math.abs(n));\n          }\n      }\n      if (n >= len) {\n          return -1;\n      }\n      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n      for (; k < len; k++) {\n          if (k in t && t[k] === searchElement) {\n              return k;\n          }\n      }\n      return -1;\n  }\n}","import GMaps from './core';\n\n/**\n * Extends GMaps to use UI controls.\n * @module Controls\n */\n\nconst createControl = ({ style = {}, id, title, classes, content, position, events = {}, disableDefaultStyles, }) => {\n  const control = global.document.createElement('div');\n\n  control.style.cursor = 'pointer';\n\n  if (disableDefaultStyles !== true) {\n    control.style.fontFamily = 'Roboto, Arial, sans-serif';\n    control.style.fontSize = '11px';\n    control.style.boxShadow = 'rgba(0, 0, 0, 0.298039) 0px 1px 4px -1px';\n  }\n\n  Object.keys(style).forEach((property) => {\n    control.style = style[property];\n  });\n\n  if (id) {\n    control.id = id;\n  }\n\n  if (title) {\n    control.title = title;\n  }\n\n  if (classes) {\n    control.className = classes;\n  }\n\n  if (content) {\n    if (typeof content === 'string') {\n      control.innerHTML = content;\n    } else if (content instanceof global.HTMLElement) {\n      control.appendChild(content);\n    }\n  }\n\n  if (position) {\n    control.position = google.maps.ControlPosition[position.toUpperCase()];\n  }\n\n  Object.keys(events).forEach(eventName =>\n    google.maps.event.addDomListener(control, eventName, event =>\n      events[eventName].call(this, event)\n    )\n  );\n\n  control.index = 1;\n\n  return control;\n};\n\n/**\n * Add a custom control to the map UI.\n * @function addControl\n *\n * @param {object} options - The `options` object should contain:\n * * `style` (object): The keys and values of this object should be valid CSS properties and values.\n * * `id` (string): The HTML id for the custom control.\n * * `classes` (string): A string containing all the HTML classes for the custom control.\n * * `content` (string or HTML element): The content of the custom control.\n * * `position` (string): Any valid [`google.maps.ControlPosition`](https://developers.google.com/maps/documentation/javascript/controls#ControlPositioning) value, in lower or upper case.\n * * `events` (object): The keys of this object should be valid DOM events. The values should be functions.\n * * `disableDefaultStyles` (boolean): If false, removes the default styles for the controls like font (family and size), and box shadow.\n *\n * @returns {HTMLElement}\n */\nGMaps.prototype.addControl = function addControl(options) {\n  const control = createControl(options);\n\n  this.controls.push(control);\n  this.map.controls[control.position].push(control);\n\n  return control;\n};\n\n/**\n * Remove a control from the map. `control` should be a control returned by `addControl()`.\n * @function removeControl\n *\n * @param {HTMLElement} control - One of the controls returned by `addControl()`.\n * @returns {HTMLElement} the removed control.\n */\nGMaps.prototype.removeControl = function removeControl(control) {\n  const controlIndex = this.controls.indexOf(control);\n\n  this.controls.splice(controlIndex, 1);\n\n  if (control.position >= 0 && controlIndex >= 0) {\n    const controlsForPosition = this.map.controls[control.position];\n    const controlIndexInCollection = controlsForPosition.indexOf(control);\n\n    controlsForPosition.removeAt(controlIndexInCollection);\n  }\n\n  return control;\n};\n\nexport default GMaps;\n","import GMaps from './core';\nimport './events';\n\n/**\n * Extends GMaps to use custom overlays.\n * @module Overlays\n */\n\nconst STOP_PROPAGATION_EVENTS = ['contextmenu', 'DOMMouseScroll', 'dblclick', 'mousedown'];\n\n/**\n * Draw an overlay in the Map and add it to the overlays collection. This method also fires a `overlay_added` event.\n * @function drawOverlay\n *\n * @param {object} options - The `options` object should contain:\n * @param {boolean} options.autoShow - Show the overlay inmediatly after being created.\n * @param {number} options.latitude - Latitude of the coordinate where the overlay is placed. If `latitude` and `longitude` are set, `position`is ignored.\n * @param {number} options.longitude - Longitude of the coordinate where the overlay is placed. If `latitude` and `longitude` are set, `position`is ignored.\n * @param {google.maps.LatLng} options.position - A `google.maps.LatLng` coordinate where the overlay is placed. If set, `latitude` and `longitude` are ignored.\n * @param {string} options.content - HTML that will be drawn in the overlay.\n * @param {string} options.layer - Id of any of the layers defined in [google.maps.MapPanes](https://developers.google.com/maps/documentation/javascript/reference#MapPanes):\n *   * floatPane\n *   * floatShadow\n *   * mapPane\n *   * overlayImage\n *   * overlayLayer\n *   * overlayMouseTarget\n *   * overlayShadow\n * @param {string} options.verticalAlign - Vertical align of the overlay (where the center is the coordinate `latitude`, `longitude`):\n *   * top\n *   * middle\n *   * bottom\n * @param {string} options.horizontalAlign - Horizontal align of the overlay (where the center is the coordinate `latitude`, `longitude`):\n *   * left\n *   * center\n *   * right\n * @param {number} options.horizontalOffset - Horizontal offset in pixels of the overlay.\n * @param {number} options.verticalOffset - Vertical offset in pixels of the overlay.\n *\n * @returns {google.maps.OverlayView}\n */\nGMaps.prototype.drawOverlay = function drawOverlay(baseOptions) {\n  const self = this;\n  const overlay = new google.maps.OverlayView();\n  const {\n    autoShow = true,\n    lat,\n    latitude = lat,\n    lng,\n    longitude = lng,\n    position = new google.maps.LatLng(latitude, longitude),\n    layer = 'overlayLayer',\n    horizontalOffset = 0,\n    verticalOffset = 0,\n    verticalAlign,\n    horizontalAlign,\n    ...options\n  } = baseOptions;\n\n  overlay.setMap(this.map);\n\n  overlay.onAdd = function onAdd() {\n    const element = document.createElement('div');\n\n    element.style.borderStyle = 'none';\n    element.style.borderWidth = '0px';\n    element.style.position = 'absolute';\n    element.style.zIndex = 100;\n    element.innerHTML = options.content;\n\n    overlay.element = element;\n\n    const panes = this.getPanes();\n    const overlayLayer = panes[layer];\n\n    overlayLayer.appendChild(element);\n\n    STOP_PROPAGATION_EVENTS.forEach(eventName =>\n      google.maps.event.addDomListener(element, eventName, (event) => {\n        if (global.navigator.userAgent.toLowerCase().indexOf('msie') !== -1 && document.all) {\n          // eslint-disable-next-line no-param-reassign\n          event.cancelBubble = true;\n          // eslint-disable-next-line no-param-reassign\n          event.returnValue = false;\n        } else {\n          event.stopPropagation();\n        }\n      })\n    );\n\n    if (options.click) {\n      panes.overlayMouseTarget.appendChild(overlay.element);\n      google.maps.event.addDomListener(overlay.element, 'click', () => {\n        options.click.call(self, overlay);\n      });\n    }\n\n    google.maps.event.trigger(this, 'ready');\n  };\n\n  overlay.draw = function draw() {\n    const projection = this.getProjection();\n    const pixel = projection.fromLatLngToDivPixel(position);\n\n    const { element, } = overlay;\n    const content = element.children[0];\n    const contentHeight = content.clientHeight;\n    const contentWidth = content.clientWidth;\n\n    switch (verticalAlign) {\n      case 'top':\n        element.style.top = `${pixel.y - contentHeight + verticalOffset}px`;\n        break;\n      default:\n      case 'middle':\n        element.style.top = `${pixel.y - (contentHeight / 2) + verticalOffset}px`;\n        break;\n      case 'bottom':\n        element.style.top = `${pixel.y + verticalOffset}px`;\n        break;\n    }\n\n    switch (horizontalAlign) {\n      case 'left':\n        element.style.left = `${pixel.x - contentWidth + horizontalOffset}px`;\n        break;\n      default:\n      case 'center':\n        element.style.left = `${pixel.x - (contentWidth / 2) + horizontalOffset}px`;\n        break;\n      case 'right':\n        element.style.left = `${pixel.x + horizontalOffset}px`;\n        break;\n    }\n\n    element.style.display = autoShow ? 'block' : 'none';\n\n    if (!autoShow) {\n      options.show.call(this, element);\n    }\n  };\n\n  overlay.onRemove = function onRemove() {\n    const { element, } = overlay;\n\n    if (options.remove) {\n      options.remove.call(this, element);\n    } else {\n      element.parentNode.removeChild(element);\n      overlay.element = null;\n    }\n  };\n\n  this.overlays.push(overlay);\n\n  GMaps.fire('overlay_added', overlay, this);\n\n  return overlay;\n};\n\n/**\n * Remove an overlay from the map and from the overlays collection. This method also fires a `overlay_removed` event.\n * @function removeOverlay\n *\n * @param {google.maps.OverlayView} overlay - The overlay to be removed.\n */\nGMaps.prototype.removeOverlay = function removeOverlay(overlay) {\n  const overlayIndex = this.overlays.indexOf(overlay);\n\n  if (overlayIndex >= 0) {\n    overlay.setMap(null);\n    this.overlays.splice(overlayIndex, 1);\n\n    GMaps.fire('overlay_removed', overlay, this);\n  }\n};\n\n/**\n * Remove all the overlays from the map and clear the overlays collection. This method does not fire a `overlay_removed` event.\n * @function removeOverlays\n */\nGMaps.prototype.removeOverlays = function removeOverlays() {\n  this.overlays.forEach(overlay => overlay.setMap(null));\n\n  this.overlays = [];\n};\n\nexport default GMaps;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","import GMaps from './core';\n\nconst parseColor = (color, opacity) => {\n  let parsedColor;\n\n  if (color[0] === '#') {\n    parsedColor = color.replace('#', '0x');\n\n    if (opacity) {\n      // eslint-disable-next-line no-param-reassign\n      opacity = Math.min(1, Math.max(parseFloat(opacity), 0));\n\n      if (opacity === 0) {\n        return '0x00000000';\n      }\n\n      // eslint-disable-next-line no-param-reassign\n      opacity = (opacity * 255).toString(16);\n\n      if (opacity.length === 1) {\n        // eslint-disable-next-line no-param-reassign\n        opacity += opacity;\n      }\n\n      parsedColor = parsedColor.slice(0, 8) + opacity;\n    }\n  }\n\n  return parsedColor;\n};\n\n/**\n * Extends GMaps to generate static maps.\n * @module Static\n */\n\n/**\n * Creates an URL for a static map from current GMaps map.\n * @function toImage\n *\n * @param {object} options - The `options` object should contain:\n * @param {array} options.size - Width and height of the image.\n *\n * @returns {string}\n */\n GMaps.prototype.toImage = function toImage(options) {\n  const { size = [this.element.clientWidth, this.element.clientHeight], } = options;\n\n  const staticMapOptions = {\n    size,\n    latitude: this.getCenter().lat(),\n    longitude: this.getCenter().lng(),\n    markers: this.markers.map(marker => ({\n      latitude: marker.getPosition().lat(),\n      longitude: marker.getPosition().lng(),\n    })),\n  };\n\n  if (this.polylines.length > 0) {\n    const polyline = this.polylines[0];\n\n    staticMapOptions.polyline = {\n      path: google.maps.geometry.encoding.encodePath(polyline.getPath()),\n      strokeColor: polyline.strokeColor,\n      strokeOpacity: polyline.strokeOpacity,\n      strokeWeight: polyline.strokeWeight,\n    };\n  }\n\n  return GMaps.staticMapURL(staticMapOptions);\n};\n\nconst buildMarkerParameters = (marker) => {\n  const markerParameters = [];\n\n  const { address, lat, latitude = lat, lng, longitude = lng, size, icon, color, label, ...markerOptions } = marker;\n\n  const location = address || `${latitude},${longitude}`;\n\n  if (size) {\n    markerParameters.push(`size:${size}`);\n  }\n\n  if (icon) {\n    markerParameters.push(`icon:${encodeURI(icon)}`);\n  }\n\n  if (color) {\n    markerParameters.push(`color:${color.replace('#', '0x')}`);\n  }\n\n  if (label) {\n    markerParameters.push(`label:${label[0].toUpperCase()}`);\n  }\n\n  Object.keys(markerOptions).forEach(key => markerParameters.push(`${key}:${markerParameters[key]}`));\n\n  markerParameters.push(location);\n\n  return markerParameters;\n};\n\nconst buildPathParameters = (polyline) => {\n  const { path, } = polyline;\n  const polylineParameters = [];\n\n  if (polyline.strokeWeight) {\n    polylineParameters.push(`weight:${parseInt(polyline.strokeWeight, 10)}`);\n  }\n\n  if (polyline.strokeColor) {\n    polylineParameters.push(`color:${parseColor(polyline.strokeColor, polyline.strokeOpacity)}`);\n  }\n\n  if (polyline.fillColor) {\n    polylineParameters.push(`fillcolor:${parseColor(polyline.fillColor, polyline.fillOpacity)}`);\n  }\n\n  if (path.join) {\n    path.forEach(coordinates => polylineParameters.push(coordinates.join(',')));\n  } else {\n    polylineParameters.push(`enc:${path}`);\n  }\n\n  return polylineParameters;\n};\n\nconst buildStyleParameters = (style) => {\n  const styleParameters = [];\n\n  if (style.featureType) {\n    styleParameters.push(`feature:${style.featureType.toLowerCase()}`);\n  }\n\n  if (style.elementType) {\n    styleParameters.push(`element:${style.elementType.toLowerCase()}`);\n  }\n\n  if (style.stylers.length) {\n    style.stylers.forEach((styler) => {\n      Object.keys(styler).forEach((key) => {\n        const value = (key === 'hue' || key === 'color') ? styler[key].replace('#', '0x') : styler[key];\n\n        styleParameters.push(`${key}:${value}`);\n      });\n    });\n  }\n\n  return styleParameters;\n};\n\nGMaps.staticMapURL = function staticMapURL(baseOptions) {\n  const { url, lat, latitude = lat, lng, longitude = lng, center, address, zoom = 15, markers = [], styles, polyline, visible, size = [630, 300], ...options } = baseOptions;\n  const defaultRoot = `${global.location.protocol === 'file:' ? 'http:' : global.location.protocol}//maps.googleapis.com/maps/api/staticmap`;\n\n  let root = url || defaultRoot;\n  const parameters = [];\n\n  root += '?';\n\n  // Map options\n  if (center) {\n    parameters.push(`center=${center}`);\n  } else if (address) {\n    parameters.push(`center=${address}`);\n  } else if (latitude && longitude) {\n    parameters.push(`center=${latitude},${longitude}`);\n  } else if (visible) {\n    parameters.push(`visible=${encodeURI(visible.join('|'))}`);\n  }\n\n  parameters.push(`size=${size.join('x')}`);\n  parameters.push(`zoom=${zoom}`);\n\n  Object.keys(options).forEach(key => parameters.push(`${key}=${options[key]}`));\n\n  // Map style\n  if (styles) {\n    styles.forEach((style) => {\n      const styleParameters = buildStyleParameters(style);\n\n      parameters.push(`style=${encodeURI(styleParameters.join('|'))}`);\n    });\n  }\n\n  // Markers\n  if (markers.length) {\n    markers.forEach((marker) => {\n      const markerParameters = buildMarkerParameters(marker);\n      parameters.push(`markers=${encodeURI(markerParameters.join('|'))}`);\n    });\n  }\n\n  // Polylines\n  if (polyline) {\n    const polylineParameters = buildPathParameters(polyline);\n\n    parameters.push(`path=${encodeURI(polylineParameters.join('|'))}`);\n  }\n\n  // Retina support\n  const dpi = window.devicePixelRatio || 1;\n  parameters.push(`scale=${dpi}`);\n\n  return root + parameters.join('&');\n};\n\nexport default GMaps;\n","import GMaps, { getElementById, setupEvents } from './core';\n\n/**\n * Extends GMaps to use StreetView panoramas\n * @module StreetView\n */\n\nconst STREETVIEW_EVENTS = ['closeclick', 'links_changed', 'pano_changed', 'position_changed', 'pov_changed', 'resize', 'visible_changed'];\n\n/**\n * Display a Street View Panorama for a position.\n * @function createPanorama\n *\n * @param {object} options - The `options` object should contain:\n * @param {number} options.latitude - Latitude of the coordinate where the panorama is placed. If not set, it takes the Map's center.\n * @param {number} options.longitude - Longitude of the coordinate where the panorama is placed. If not set, it takes the Map's center.\n * @param {google.maps.LatLng} options.position - A `google.maps.LatLng` coordinate where the panorama is placed. If set, `latitude` and `longitude` are ignored.\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#StreetViewPanoramaOptions) and any event defined in the [\"Events\" section](https://developers.google.com/maps/documentation/javascript/reference#StreetViewPanorama).\n *\n * @returns {google.maps.StreetViewPanorama}\n */\nGMaps.prototype.createPanorama = function createPanorama(baseOptions) {\n  const { lat = this.getCenter().lat(), latitude = lat, lng = this.getCenter().lng(), longitude = lng, ...options } = baseOptions;\n\n  const streetViewOptions = {\n    latitude,\n    longitude,\n    instance: this,\n    ...options,\n  };\n\n  this.panorama = GMaps.createPanorama(streetViewOptions);\n\n  this.map.setStreetView(this.panorama);\n\n  return this.panorama;\n};\n\nGMaps.createPanorama = function createPanorama(baseOptions) {\n  const {\n    el,\n    element = el,\n    context,\n    lat,\n    latitude = lat,\n    lng,\n    longitude = lng,\n    position = new google.maps.LatLng(latitude, longitude),\n    instance = global,\n    ...options\n  } = baseOptions;\n\n  const containerElement = getElementById(element, context);\n\n  const filteredOptions = Object.keys(options).reduce((hash, key) => {\n    if (STREETVIEW_EVENTS.includes(key)) {\n      return hash;\n    }\n\n    return { ...hash, [key]: options[key], };\n  }, {});\n\n  const streetViewOptions = {\n    ...filteredOptions,\n    position,\n    visible: true,\n  };\n\n  const panorama = new google.maps.StreetViewPanorama(containerElement, streetViewOptions);\n\n  setupEvents({ events: STREETVIEW_EVENTS, object: panorama, instance, handlers: options, });\n\n  return panorama;\n};\n\nexport default GMaps;\n","import GMaps from './core';\n\n/**\n * Extends GMaps to add utils functions.\n * @module Utils\n */\n\n/**\n * Geolocate using browser's Web API.\n * @function geolocate\n * @static\n *\n * @param {object} options - The `options` object should contain:\n * @param {function} options.always - A callback that will be executed after the `success`, `error` and `not_supported` callbacks.\n * @param {function} options.success - A callback that will be executed after the browser find its geolocation.\n * @param {function} options.error - A callback that will be executed after the browser fails at finding its geolocation.\n * @param {function} options.not_supported - A callback that will be executed if the browser doesn't support geolocation.\n * @param {object} options.options - Object with all options defined in [PositionOptions](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n */\nGMaps.geolocate = function geolocate(options) {\n  const completeCallback = options.always || options.complete;\n\n  if (global.navigator.geolocation) {\n    global.navigator.geolocation.getCurrentPosition((position) => {\n      options.success(position);\n\n      if (completeCallback) {\n        completeCallback();\n      }\n    }, (error) => {\n      options.error(error);\n\n      if (completeCallback) {\n        completeCallback();\n      }\n    }, options.options);\n  } else {\n    options.not_supported();\n\n    if (completeCallback) {\n      completeCallback();\n    }\n  }\n};\n\n/**\n * Geocode using Google Maps Geocoding service.\n * @function geolocate\n * @static\n *\n * @param {object} options - The `options` object should contain:\n * @param {number} options.latitude - Latitude of the coordinate to geocode. If `latitude` and `longitude` are set, `location` is ignored.\n * @param {number} options.longitude - Longitude of the coordinate to geocode. If `latitude` and `longitude` are set, `location` is ignored.\n * @param {google.maps.LatLng} options.location - A `google.maps.LatLng` coordinate to geocode. If set, `latitude` and `longitude` are ignored.\n * @param {function} options.callback - Function that will be executed after the results are returned. It receives 2 arguments, which is an array of [GeocoderResult](https://developers.google.com/maps/documentation/javascript/reference#GeocoderResult) objects and the [request's status](https://developers.google.com/maps/documentation/javascript/reference#GeocoderStatus).\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#GeocoderRequest).\n *\n */\nGMaps.geocode = function geocode(baseOptions) {\n  const {\n    callback,\n    lat,\n    latitude = lat,\n    lng,\n    longitude = lng,\n    location = new google.maps.LatLng(latitude, longitude),\n    ...options\n  } = baseOptions;\n\n  this.geocoder = new google.maps.Geocoder();\n\n  const geocodeOptions = {\n    ...options,\n    location,\n  };\n\n  this.geocoder.geocode(geocodeOptions, callback);\n};\n\nexport default GMaps;\n","import GMaps, { latLngFromArguments } from './core';\nimport './polyfills';\n\n/**\n * Extends GMaps to use geofences.\n * @module Geofences\n */\n\n/**\n * Check if a coordinate is inside or not a geofence.\n * @function checkGeofence\n *\n * @param {object} latLng - A LatLngLiteral object (a plain object with `lat` and `lng` properties).\n * @param {object} fence - A fence object, which can be an instance of `google.maps.Polygon`, `google.maps.Circle`, `google.maps.Rectangle` or `google.maps.LatLngBounds`.\n *\n * @returns {boolean} Is `true` if the coordinate is inside the fence, and `false` if is not.\n */\nGMaps.prototype.checkGeofence = function checkGeofence(...args) {\n  const lagLng = latLngFromArguments(args);\n  const fence = args.pop();\n\n  return fence.containsLatLng(lagLng);\n};\n\n/**\n * Check if a marker's position is inside or not any of its geofences. It will trigger the `outsideCallback` function for every fence that contains the marker's position.\n * @function checkMarkerGeofence\n *\n * @param {google.maps.Marker} marker - A marker added with `GMaps#addMarker`.\n * @param {function} outsideCallback - A function that will receive two arguments: the `marker` and the current fence.\n */\nGMaps.prototype.checkMarkerGeofence = function checkMarkerGeofence(marker, outsideCallback) {\n  if (marker.fences) {\n    marker.fences.forEach((fence) => {\n      const position = marker.getPosition();\n\n      if (!this.checkGeofence(position, fence)) {\n        outsideCallback(marker, fence);\n      }\n    });\n  }\n};\n\nexport default GMaps;\n","import GMaps, { setupEvents } from './core';\nimport './events';\nimport './geofences';\n\n/**\n * Extends GMaps to use markers.\n * @module Markers\n */\n\nconst INFO_WINDOW_EVENTS = ['closeclick', 'content_changed', 'domready', 'position_changed', 'zindex_changed'];\nconst MARKER_EVENTS = ['animation_changed', 'clickable_changed', 'cursor_changed', 'draggable_changed', 'flat_changed', 'icon_changed', 'position_changed', 'shadow_changed', 'shape_changed', 'title_changed', 'visible_changed', 'zindex_changed'];\nconst MARKER_MOUSE_EVENTS = ['dblclick', 'drag', 'dragend', 'dragstart', 'mousedown', 'mouseout', 'mouseover', 'mouseup'];\n\nGMaps.prototype.createMarker = function createMarker(baseOptions) {\n  const self = this;\n  const { lat, latitude = lat, lng, longitude = lng, position, details, fences, outside, infoWindow, ...options } = baseOptions;\n\n  if (latitude === undefined && longitude === undefined && position === undefined) {\n    throw new Error('No latitude or longitude defined.');\n  }\n\n  const markerOptions = {\n    ...options,\n    position: position || new google.maps.LatLng(latitude, longitude),\n    map: null,\n  };\n\n  const marker = new google.maps.Marker(markerOptions);\n\n  marker.fences = fences;\n\n  if (infoWindow) {\n    marker.infoWindow = new google.maps.InfoWindow(infoWindow);\n\n    setupEvents({ events: INFO_WINDOW_EVENTS, object: marker.infoWindow, instance: this, handlers: infoWindow, });\n  }\n\n  setupEvents({ events: MARKER_EVENTS, object: marker, instance: this, handlers: options, });\n\n  MARKER_MOUSE_EVENTS.forEach((eventName) => {\n    if (options[eventName]) {\n      google.maps.event.addListener(marker, eventName, (event = this) => {\n        if (!event.pixel) {\n          // eslint-disable-next-line no-param-reassign\n          event.pixel = this.map.getProjection().fromLatLngToPoint(event.latLng);\n        }\n\n        options[eventName].call(this, event);\n      });\n    }\n  });\n\n  google.maps.event.addListener(marker, 'click', function onMarkerClick(event) {\n    this.details = details;\n\n    if (options.click) {\n      options.click.call(this, event);\n    }\n\n    if (marker.infoWindow) {\n      self.hideInfoWindows();\n      marker.infoWindow.open(self.map, marker);\n    }\n  });\n\n  google.maps.event.addListener(marker, 'rightclick', function onMarkerRightClick(event) {\n    // eslint-disable-next-line no-param-reassign\n    event.marker = this;\n\n    if (options.rightclick) {\n      options.rightclick.call(this, event);\n    }\n\n    if (GMaps.contextMenus[self.id].marker !== undefined) {\n      self.buildContextMenu('marker', event);\n    }\n  });\n\n  if (marker.fences) {\n    google.maps.event.addListener(marker, 'dragend', function onMarkerDragEnd() {\n      self.checkMarkerGeofence(this, outside);\n    });\n  }\n\n  return marker;\n};\n\n/**\n * Draw a marker in the Map and add it to the markers collection. This method also fires a `marker_added` event.\n * @function addMarker\n *\n * @param {object} options - The `options` object should contain:\n * @param {number} options.latitude - Latitude of the center. If `latitude` and `longitude` are set, `center` is ignored.\n * @param {number} options.longitude - Longitude of the center. If `latitude` and `longitude` are set, `center` is ignored.\n * @param {google.maps.LatLng} options.center - A `google.maps.LatLng` coordinate indicate the center. If set, `latitude` and `longitude` are ignored.\n * @param {object} options.details - Custom object with extra data.\n * @param {array} options.fences - Collection of `google.maps.Polygon` objects that defines a marker's boundaries or geofences.\n * @param {function} options.outside - Callback fired when the marker is oustide any of its fences.\n * @param {object} options.infoWindow - Object with all options defined in [google.maps.InfoWindowOptions](https://developers.google.com/maps/documentation/javascript/reference#InfoWindowOptions).\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#MarkerOptions) and any event defined in the [\"Events\" section](https://developers.google.com/maps/documentation/javascript/reference#Marker).\n *\n * @returns {google.maps.Marker}\n */\nGMaps.prototype.addMarker = function addMarker(options) {\n  // eslint-disable-next-line camelcase\n  const { gm_accessors_, lat, latitude = lat, lng, longitude = lng, position, } = options;\n\n  let marker;\n\n  // eslint-disable-next-line camelcase\n  if (gm_accessors_) {\n    // Native google.maps.Marker object\n    marker = options;\n  } else if ((latitude && longitude) || position) {\n    marker = this.createMarker(options);\n  } else {\n    throw new Error('No latitude or longitude defined.');\n  }\n\n  marker.setMap(this.map);\n\n  if (this.markerClusterer) {\n    this.markerClusterer.addMarker(marker);\n  }\n\n  this.markers.push(marker);\n\n  GMaps.fire('marker_added', marker, this);\n\n  return marker;\n};\n\n/**\n * Draw a collection of markers into the Map. This method fires a `marker_added` event for each marker added.\n * @function addMarkers\n *\n * @param {array} markers - An array of `options` objects, which accepts the same options as in {@link GMaps#addMarker}.\n *\n * @returns {array}\n */\nGMaps.prototype.addMarkers = function addMarkers(markers) {\n  markers.forEach(marker => this.addMarker(marker));\n\n  return this.markers;\n};\n\n/**\n * Hide all markers' InfoWindows.\n * @function hideInfoWindows\n */\nGMaps.prototype.hideInfoWindows = function hideInfoWindows() {\n  this.markers.forEach((marker) => {\n    if (marker.infoWindow) {\n      marker.infoWindow.close();\n    }\n  });\n};\n\n/**\n * Remove a marker from the map and from the markers collection. This method also fires a `marker_removed` event.\n * @function removeMarker\n *\n * @param {google.maps.Polygon} polygon - The polygon to be removed.\n */\nGMaps.prototype.removeMarker = function removeMarker(marker, options = {}) {\n  const { fireEvent = true, } = options;\n  const markerIndex = this.markers.indexOf(marker);\n\n  if (markerIndex >= 0) {\n    marker.setMap(null);\n    this.markers.splice(markerIndex, 1);\n\n    if (this.markerClusterer) {\n      this.markerClusterer.removeMarker(marker);\n    }\n\n    if (fireEvent) {\n      GMaps.fire('marker_removed', marker, this);\n    }\n  }\n\n  return marker;\n};\n\n/**\n * Remove a group of markers (or all of them) from the Map and from the markers collection. This method does not fire a `marker_removed` event.\n * @function removeMarkers\n *\n * @param {array} markers - The markers to be removed. If not set, it removes all markers in the Map.\n */\nGMaps.prototype.removeMarkers = function removeMarkers(markers = this.markers) {\n  markers.forEach(marker => this.removeMarker(marker, { fireEvent: false, }));\n};\n\nexport default GMaps;\n","import GMaps, { setupEvents, arrayToLatLng, flattenArray } from './core';\nimport 'events';\n\n/**\n * Extends GMaps to use polylines and polygons.\n * @module Geometry\n */\n\nconst EVENTS = ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'];\n\n/**\n * Draw a polyline in the Map and add it to the polylines collection. This method also fires a `polyline_added` event.\n * @function drawPolyline\n *\n * @param {object} options - The `options` object should contain:\n * @param {array} options.path - Collection of coordinates (which can be either an array [lat, lng] or a google.maps.LatLng object).\n * @param {string} options.strokeColor - Color of the polyline. Can be hexadecimal or CSS name.\n * @param {float} options.strokeOpacity - Opacity of the polyline from 0.0 to 1.0.\n * @param {integer} options.strokeWeight - Polyline width in pixels.\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#PolylineOptions) and any event defined in the [\"Events\" section](https://developers.google.com/maps/documentation/javascript/reference#Polyline).\n *\n * @returns {google.maps.Polyline}\n */\nGMaps.prototype.drawPolyline = function drawPolyline({ icons, strokeColor, strokeOpacity, strokeWeight, geodesic, clickable = true, editable = false, visible = true, zIndex, ...options }) {\n  let path = [];\n\n  if (options.path.length) {\n    if (options.path[0][0] === undefined) {\n      path = [...options.path];\n    } else {\n      path = options.path.map(latLng =>\n        new google.maps.LatLng(latLng[0], latLng[1])\n      );\n    }\n  }\n\n  const polylineOptions = {\n    map: this.map,\n    path,\n    strokeColor,\n    strokeOpacity,\n    strokeWeight,\n    geodesic,\n    visible,\n    clickable,\n    editable,\n    icons,\n    zIndex,\n  };\n\n  const polyline = new google.maps.Polyline(polylineOptions);\n\n  setupEvents({ events: EVENTS, object: polyline, instance: this, handlers: options, });\n\n  this.polylines.push(polyline);\n\n  GMaps.fire('polyline_added', polyline, this);\n\n  return polyline;\n};\n\n/**\n * Remove a polyline from the map and from the polylines collection. This method also fires a `polyline_removed` event.\n * @function removePolyline\n *\n * @param {google.maps.Polyline} polyline - The polyline to be removed.\n */\nGMaps.prototype.removePolyline = function removePolyline(polyline) {\n  const polylineIndex = this.polylines.indexOf(polyline);\n\n  if (polylineIndex >= 0) {\n    polyline.setMap(null);\n    this.polylines.splice(polylineIndex, 1);\n\n    GMaps.fire('polyline_removed', polyline, this);\n  }\n};\n\n/**\n * Remove all the polylines from the map and clear the polylines collection. This method does not fire a `polyline_removed` event.\n * @function removePolylines\n */\nGMaps.prototype.removePolylines = function removePolylines() {\n  this.polylines.forEach(polyline => polyline.setMap(null));\n\n  this.polylines = [];\n};\n\n/**\n * Draw a circle in the Map and it to the polygons collection.\n * @function drawCircle\n *\n * @param {object} options - The `options` object should contain:\n * @param {number} options.latitude - Latitude of the center. If `latitude` and `longitude` are set, `center`is ignored.\n * @param {number} options.longitude - Longitude of the center. If `latitude` and `longitude` are set, `center`is ignored.\n * @param {google.maps.LatLng} options.center - A `google.maps.LatLng` coordinate indicate the center. If set, `latitude` and `longitude` are ignored.\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#CircleOptions) and any event defined in the [\"Events\" section](https://developers.google.com/maps/documentation/javascript/reference#Circle).\n *\n * @returns {google.maps.Circle}\n */\nGMaps.prototype.drawCircle = function drawCircle(baseOptions) {\n  const { lat, latitude = lat, lng, longitude = lng, ...options } = baseOptions;\n  const { center = new google.maps.LatLng(latitude, longitude), } = options;\n  const polygonOptions = {\n    ...options,\n    map: this.map,\n    center,\n  };\n\n  const polygon = new google.maps.Circle(polygonOptions);\n\n  setupEvents({ events: EVENTS, object: polygon, instance: this, handlers: options, });\n\n  this.polygons.push(polygon);\n\n  return polygon;\n};\n\n/**\n * Draw a rectangle in the Map and it to the polygons collection.\n * @function drawRectangle\n *\n * @param {object} options - The `options` object should contain:\n * @param {array} options.bounds - Bi-dimensional array of latitudes and longitudes.\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#RectangleOptions) and any event defined in the [\"Events\" section](https://developers.google.com/maps/documentation/javascript/reference#Rectangle).\n *\n * @returns {google.maps.Rectangle}\n */\nGMaps.prototype.drawRectangle = function drawRectangle(baseOptions) {\n  const { bounds, ...options } = baseOptions;\n\n  const latLngBounds = new google.maps.LatLngBounds(\n    new google.maps.LatLng(bounds[0][0], bounds[0][1]),\n    new google.maps.LatLng(bounds[1][0], bounds[1][1])\n  );\n\n  const polygonOptions = {\n    ...options,\n    bounds: latLngBounds,\n    map: this.map,\n  };\n\n  const polygon = new google.maps.Rectangle(polygonOptions);\n\n  setupEvents({ events: EVENTS, object: polygon, instance: this, handlers: options, });\n\n  this.polygons.push(polygon);\n\n  return polygon;\n};\n\n/**\n * Draw a polygon in the Map and it to the polygons collection.\n * @function drawPolygon\n *\n * @param {object} options - The `options` object should contain:\n * @param {array} options.paths - Bi-dimensional array of latitudes and longitudes.\n * @param {boolean} options.useGeoJSON - If set, allows `paths` to use GeoJSON format.\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#PolygonOptions) and any event defined in the [\"Events\" section](https://developers.google.com/maps/documentation/javascript/reference#Polygon).\n *\n * @returns {google.maps.Polygon}\n */\nGMaps.prototype.drawPolygon = function drawPolygon(baseOptions) {\n  const { useGeoJSON = false, ...options } = baseOptions;\n\n  const basePaths = useGeoJSON ? options.paths : [options.paths.slice(0)];\n  let paths = [];\n\n  if (basePaths.length) {\n    if (basePaths[0].length) {\n      paths = flattenArray(\n        basePaths.map(path =>\n          arrayToLatLng(path, useGeoJSON)\n        )\n      );\n    }\n  }\n\n  const polygonOptions = {\n    ...options,\n    map: this.map,\n    paths,\n  };\n\n  const polygon = new google.maps.Polygon(polygonOptions);\n\n  setupEvents({ events: EVENTS, object: polygon, instance: this, handlers: options, });\n\n  this.polygons.push(polygon);\n\n  GMaps.fire('polygon_added', polygon, this);\n\n  return polygon;\n};\n\n/**\n * Remove a polygon from the map and from the polygons collection. This method also fires a `polygon_removed` event.\n * @function removePolygon\n *\n * @param {google.maps.Polygon} polygon - The polygon to be removed.\n */\nGMaps.prototype.removePolygon = function removePolygon(polygon) {\n  const polygonIndex = this.polygons.indexOf(polygon);\n\n  if (polygonIndex >= 0) {\n    polygon.setMap(null);\n    this.polygons.splice(polygonIndex, 1);\n\n    GMaps.fire('polygon_removed', polygon, this);\n  }\n};\n\n/**\n * Remove all the polygons from the map and clear the polygons collection. This method does not fire a `polygon_removed` event.\n * @function removePolygons\n */\nGMaps.prototype.removePolygons = function removePolygons() {\n  this.polygons.forEach(polygon => polygon.setMap(null));\n\n  this.polygons = [];\n};\n\nexport default GMaps;\n","import GMaps, { setupEventListener } from './core';\nimport './events';\n\n/**\n * Extends GMaps to use polylines and polygons.\n * @module Layers\n */\n\nGMaps.prototype.getFromFusionTables = function getFromFusionTables(baseOptions) {\n  const { events = {}, ...options } = baseOptions;\n\n  const layer = new google.maps.FusionTablesLayer(options);\n\n  Object.keys(events).forEach(eventName =>\n    setupEventListener({\n      object: layer,\n      eventName,\n      instance: this,\n      handler: events[eventName],\n    })\n  );\n\n  this.layers.push(layer);\n\n  return layer;\n};\n\n/**\n * Draw a FusionTables layer in the Map.\n * @function loadFromFusionTables\n *\n * @param {object} options - The `options` accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#FusionTablesLayerOptions).\n *\n * `options` also accepts an `events` object, which accepts only `click`.\n *\n * @returns {google.maps.FusionTablesLayer}\n */\nGMaps.prototype.loadFromFusionTables = function loadFromFusionTables(options) {\n  const layer = this.getFromFusionTables(options);\n  layer.setMap(this.map);\n\n  return layer;\n};\n\nGMaps.prototype.getFromKML = function getFromKML(baseOptions) {\n  const { url, events, ...options } = baseOptions;\n\n  const layer = new google.maps.KmlLayer(url, options);\n\n  Object.keys(events).forEach(eventName =>\n    setupEventListener({\n      object: layer,\n      eventName,\n      instance: this,\n      handler: events[eventName],\n    })\n  );\n\n  this.layers.push(layer);\n\n  return layer;\n};\n\n/**\n * Draw a KML layer in the Map.\n * @function loadFromKML\n *\n * @param {object} options - The `options` accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#KmlLayerOptions).\n *\n * `options` also accepts an `events` object, which accepts all events defined in the [\"Events\" section](https://developers.google.com/maps/documentation/javascript/reference#KmlLayer).\n *\n * @returns {google.maps.KmlLayer}\n */\nGMaps.prototype.loadFromKML = function loadFromKML(options) {\n  const layer = this.getFromKML(options);\n  layer.setMap(this.map);\n\n  return layer;\n};\n\n/**\n * Draw a layer in the Map. This method also fires a `layer_added` event.\n * @function addLayer\n *\n * @param {string} layerName - The name of a Google Maps layer, which can be: `traffic`, `transit` or `bicycling`.\n *\n * @returns {google.maps.TrafficLayer|google.maps.TransitLayer|google.maps.BicyclingLayer}\n */\nGMaps.prototype.addLayer = function addLayer(layerName, baseOptions = {}) {\n  const { filter, click, search, nearbySearch, radarSearch, textSearch, ...options } = baseOptions;\n  const { bounds, keyword, location, name, radius, rankBy, types, query, } = options;\n  let layer;\n\n  switch (layerName) {\n    case 'traffic':\n      layer = new google.maps.TrafficLayer();\n      this.singleLayers.traffic = layer;\n      break;\n    case 'transit':\n      layer = new google.maps.TransitLayer();\n      this.singleLayers.transit = layer;\n      break;\n    case 'bicycling':\n      layer = new google.maps.BicyclingLayer();\n      this.singleLayers.bicycling = layer;\n      break;\n    case 'places':\n      layer = new google.maps.places.PlacesService(this.map);\n      this.singleLayers.places = layer;\n\n      if (search || nearbySearch || radarSearch) {\n        const placeSearchRequest = {\n          bounds,\n          keyword,\n          location,\n          name,\n          radius,\n          rankBy,\n          types,\n        };\n\n        if (radarSearch) {\n          layer.radarSearch(placeSearchRequest, radarSearch);\n        }\n\n        if (search) {\n          layer.search(placeSearchRequest, search);\n        }\n\n        if (nearbySearch) {\n          layer.nearbySearch(placeSearchRequest, nearbySearch);\n        }\n      }\n\n      if (textSearch) {\n        const textSearchRequest = {\n          bounds,\n          location,\n          query,\n          radius,\n        };\n\n        layer.textSearch(textSearchRequest, textSearch);\n      }\n      break;\n    default:\n      break;\n  }\n\n  if (layer) {\n    if (typeof layer.setOptions === 'function') {\n      layer.setOptions(options);\n    }\n\n    if (typeof layer.setMap === 'function') {\n      layer.setMap(this.map);\n    }\n\n    GMaps.fire('layer_added', layer, this);\n\n    return layer;\n  }\n};\n\n/**\n * Remove a layer from the map. If the layer is a FusionTables layer or a KML layer, `removeLayer` also removes the layer from the layers collection and fires a `layer_removed` event.\n * @function removeLayer\n *\n * @param {google.maps.Polygon} polygon - The polygon to be removed.\n */\nGMaps.prototype.removeLayer = function removeLayer(layer) {\n  if (typeof layer === 'string' && this.singleLayers[layer] !== undefined) {\n    this.singleLayers[layer].setMap(null);\n\n    delete this.singleLayers[layer];\n  } else {\n    const layerIndex = this.layers.indexOf(layer);\n\n    if (layerIndex >= 0) {\n      layer.setMap(null);\n      this.layers.splice(layerIndex, 1);\n\n      GMaps.fire('layer_removed', layer, this);\n    }\n  }\n};\n\nexport default GMaps;\n","import GMaps, { latLngFromArguments, flattenArray, arrayToLatLng } from './core';\n\n/**\n * Extends GMaps to use routes.\n * @module Routes\n */\n\n/**\n * Get routes between two coordinates.\n * @function getRoutes\n *\n * @param {object} options - The `options` object should contain:\n * @param {string|google.maps.LatLng|google.maps.Place|google.maps.LatLngLiteral} options.origin - Location of origin.\n * @param {string|google.maps.LatLng|google.maps.Place|google.maps.LatLngLiteral} options.destination - Location of destination.\n * @param {string} options.travelMode - Can be `bicycling`, `driving`, `transit` or `walking`.\n * @param {array} options.waypoints - Array of [google.maps.DirectionsWaypoint](https://developers.google.com/maps/documentation/javascript/reference#DirectionsWaypoint) objects.\n * @param {function} options.callback - Function that will be executed after the results are returned.\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRequest).\n */\nGMaps.prototype.getRoutes = function getRoutes(baseOptions) {\n  const { origin, destination, travelMode = 'walking', unitSystem = 'metric', avoidHighways = false, avoidTolls = false, optimizeWaypoints = false, waypoints = [], callback, error, ...options } = baseOptions;\n\n  const travelModeId = google.maps.TravelMode[travelMode.toUpperCase()];\n  const unitSystemId = google.maps.TravelMode[unitSystem.toUpperCase()];\n\n  const requestOptions = {\n    ...options,\n    travelMode: travelModeId,\n    unitSystem: unitSystemId,\n    avoidHighways,\n    avoidTolls,\n    optimizeWaypoints,\n    waypoints,\n    origin: latLngFromArguments(origin),\n    destination: latLngFromArguments(destination),\n  };\n\n  const service = new google.maps.DirectionsService();\n\n  service.route(requestOptions, (result, status) => {\n    if (status === google.maps.DirectionsStatus.OK) {\n      if (callback) {\n        callback([...result.routes], result, status);\n      }\n    } else if (error) {\n      error(result, status);\n    }\n  });\n};\n\n/**\n * Remove all routes stored in routes collection.\n * @function removeRoutes\n */\nGMaps.prototype.removeRoutes = function removeRoutes() {\n  this.routes = [];\n};\n\n/**\n * Get elevation information for locations or routes.\n * @function getElevations\n *\n * @param {array} locations - Bi-dimensional array of latitudes and longitudes.\n * @param {boolean} path - If is true, makes a request along a path. If is false, only get elevation information on discrete locations.\n * @param {function} callback - Native callback function defined in [google.maps.ElevationService ('Methods' section)](https://developers.google.com/maps/documentation/javascript/reference#ElevationService) (`getElevationAlongPath` if `path` is true, `getElevationForLocations` if `path` is false).\n */\nGMaps.prototype.getElevations = function getElevations(baseOptions) {\n  const { path = false, samples = 256, callback, ...options } = baseOptions;\n\n  let locations = options.locations || [];\n\n  if (locations.length > 0) {\n    if (locations[0].length > 0) {\n      locations = flattenArray([locations].map(location => arrayToLatLng(location, false)));\n    }\n  }\n\n  const service = new google.maps.ElevationService();\n\n  if (!path) {\n    const requestOptions = {\n      ...options,\n      locations,\n      path,\n      samples,\n    };\n\n    service.getElevationForLocations(requestOptions, (result, status) => {\n      if (typeof callback === 'function') {\n        callback(result, status);\n      }\n    });\n  } else {\n    const requestOptions = {\n      path: locations,\n      samples,\n    };\n\n    service.getElevationAlongPath(requestOptions, (result, status) => {\n      if (typeof callback === 'function') {\n        callback(result, status);\n      }\n    });\n  }\n};\n\n/**\n * Alias for {@link GMaps#removePolylines}.\n * @function cleanRoute\n */\nGMaps.prototype.cleanRoute = GMaps.prototype.removePolylines;\n\nGMaps.prototype.renderRoute = function renderRoute(options, baseRenderOptions) {\n  const panel = ((typeof baseRenderOptions.panel === 'string') ? document.getElementById(baseRenderOptions.panel.replace('#', '')) : baseRenderOptions.panel);\n\n  const renderOptions = {\n    ...baseRenderOptions,\n    panel,\n    map: this.map,\n  };\n\n  const display = new google.maps.DirectionsRenderer(renderOptions);\n\n  this.getRoutes({\n    origin: options.origin,\n    destination: options.destination,\n    travelMode: options.travelMode,\n    waypoints: options.waypoints,\n    unitSystem: options.unitSystem,\n    error: options.error,\n    avoidHighways: options.avoidHighways,\n    avoidTolls: options.avoidTolls,\n    optimizeWaypoints: options.optimizeWaypoints,\n    callback(_, response, status) {\n      if (status === google.maps.DirectionsStatus.OK) {\n        display.setDirections(response);\n      }\n    },\n  });\n};\n\n/**\n * Draw a route using polylines. It uses the last route found by {@link GMaps#getRoutes}.\n * @function drawRoute\n *\n * @param {object} options - Accepts the same options as {@link GMaps#getRoutes}.\n * @param {string|google.maps.LatLng|google.maps.Place|google.maps.LatLngLiteral} options.origin - Location of origin.\n * @param {string|google.maps.LatLng|google.maps.Place|google.maps.LatLngLiteral} options.destination - Location of destination.\n * @param {string} options.strokeColor - Color of the polyline. Can be hexadecimal or CSS name.\n * @param {float} options.strokeOpacity - Opacity of the polyline from 0.0 to 1.0\n * @param {integer} options.strokeWeight - Polyline width in pixels.\n */\nGMaps.prototype.drawRoute = function drawRoute(options) {\n  const self = this;\n\n  this.getRoutes({\n    origin: options.origin,\n    destination: options.destination,\n    travelMode: options.travelMode,\n    waypoints: options.waypoints,\n    unitSystem: options.unitSystem,\n    error: options.error,\n    avoidHighways: options.avoidHighways,\n    avoidTolls: options.avoidTolls,\n    optimizeWaypoints: options.optimizeWaypoints,\n    callback(routes) {\n      if (routes.length > 0) {\n        const lastRoute = routes[routes.length - 1];\n        const polylineOptions = {\n          path: lastRoute.overview_path,\n          strokeColor: options.strokeColor,\n          strokeOpacity: options.strokeOpacity,\n          strokeWeight: options.strokeWeight,\n        };\n\n        if (options.icons) {\n          polylineOptions.icons = options.icons;\n        }\n\n        self.drawPolyline(polylineOptions);\n\n        if (options.callback) {\n          options.callback(lastRoute);\n        }\n      }\n    },\n  });\n};\n\n/**\n * Travel a route automatically. It uses the last route found by {@link GMaps#getRoutes}.\n * @function travelRoute\n *\n * @param {object} options - Accepts the same options as {@link GMaps#getRoutes}.\n * @param {string|google.maps.LatLng|google.maps.Place|google.maps.LatLngLiteral} options.origin - Location of origin.\n * @param {string|google.maps.LatLng|google.maps.Place|google.maps.LatLngLiteral} options.destination - Location of destination.\n * @param {object} options.route - A [google.maps.DirectionsRoute](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRoute) object. If set, `origin` and `destination` are ignored.\n * @param {function} options.start - Fired before the first step. It receives a single argument, which is a [DirectionsRoute](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRoute) object.\n * @param {function} options.step - Fired each step in the route. It receives 2 arguments, which is a [DirectionsStep](https://developers.google.com/maps/documentation/javascript/reference#DirectionsStep) object and the total length of the steps.\n * @param {function} options.end - Fired after the last step. It receives a single argument, which is a [DirectionsRoute](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRoute) object.\n */\nGMaps.prototype.travelRoute = function travelRoute(options) {\n  if (options.origin && options.destination) {\n    this.getRoutes({\n      origin: options.origin,\n      destination: options.destination,\n      travelMode: options.travelMode,\n      waypoints: options.waypoints,\n      unitSystem: options.unitSystem,\n      error: options.error,\n      callback(routes) {\n        if (routes.length === 0) {\n          return;\n        }\n\n        const lastRoute = routes[routes.length - 1];\n\n        // start callback\n        if (options.start) {\n          options.start(lastRoute);\n        }\n\n        // step callback\n        if (options.step) {\n          if (lastRoute.legs.length > 0) {\n            const { steps, } = lastRoute.legs[0];\n\n            steps.forEach((step, index) => {\n              // eslint-disable-next-line no-param-reassign\n              step.step_number = index;\n              // eslint-disable-next-line no-param-reassign\n              step.stepNumber = index;\n\n              options.step(step, steps.length - 1);\n            });\n          }\n        }\n\n        // end callback\n        if (options.end) {\n          options.end(lastRoute);\n        }\n      },\n    });\n  } else if (options.route) {\n    if (options.route.legs.length > 0) {\n      const { steps, } = options.route.legs[0];\n\n      steps.forEach((step, index) => {\n        // eslint-disable-next-line no-param-reassign\n        step.step_number = index;\n        // eslint-disable-next-line no-param-reassign\n        step.stepNumber = index;\n\n        options.step(step, steps.length - 1);\n      });\n    }\n  }\n};\n\n/**\n * Draw and travel a route automatically step by step. It uses the last route found by {@link GMaps#getRoutes}.\n * @function drawSteppedRoute\n *\n * @param {object} options - Accepts the same options as {@link GMaps#travelRoute}.\n * @param {string|google.maps.LatLng|google.maps.Place|google.maps.LatLngLiteral} options.origin - Location of origin.\n * @param {string|google.maps.LatLng|google.maps.Place|google.maps.LatLngLiteral} options.destination - Location of destination.\n * @param {object} options.route - A [google.maps.DirectionsRoute](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRoute) object. If set, `origin` and `destination` are ignored.\n * @param {string} options.strokeColor - Color of the polyline. Can be hexadecimal or CSS name.\n * @param {float} options.strokeOpacity - Opacity of the polyline from 0.0 to 1.0\n * @param {integer} options.strokeWeight - Polyline width in pixels.\n * @param {function} options.start - Fired before the first step. It receives a single argument, which is a [DirectionsRoute](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRoute) object.\n * @param {function} options.step - Fired each step in the route. It receives 2 arguments, which is a [DirectionsStep](https://developers.google.com/maps/documentation/javascript/reference#DirectionsStep) object and the total length of the steps.\n * @param {function} options.end - Fired after the last step. It receives a single argument, which is a [DirectionsRoute](https://developers.google.com/maps/documentation/javascript/reference#DirectionsRoute) object.\n\n */\nGMaps.prototype.drawSteppedRoute = function drawSteppedRoute(options) {\n  const self = this;\n\n  this.travelRoute({\n    ...options,\n    step: function step(routeStep, stepsCount) {\n      const polylineOptions = {\n        path: routeStep.path,\n        strokeColor: options.strokeColor,\n        strokeOpacity: options.strokeOpacity,\n        strokeWeight: options.strokeWeight,\n      };\n\n      if (options.icons) {\n        polylineOptions.icons = options.icons;\n      }\n\n      self.drawPolyline(polylineOptions);\n\n      options.step(routeStep, stepsCount);\n    },\n  });\n\n  // if (options.origin && options.destination) {\n  //   this.getRoutes({\n  //     origin: options.origin,\n  //     destination: options.destination,\n  //     travelMode: options.travelMode,\n  //     waypoints: options.waypoints,\n  //     error: options.error,\n  //     callback(routes) {\n  //       if (routes.length === 0) {\n  //         return;\n  //       }\n\n  //       const route = routes[routes.length - 1];\n\n  //       // start callback\n  //       if (options.start) {\n  //         options.start(route);\n  //       }\n\n  //       // step callback\n  //       if (options.step) {\n  //         if (route.legs.length > 0) {\n  //           const { steps, } = route.legs[0];\n\n  //           steps.forEach((step, index) => {\n  //             // eslint-disable-next-line no-param-reassign\n  //             step.step_number = index;\n  //             // eslint-disable-next-line no-param-reassign\n  //             step.stepNumber = index;\n\n  //             const polylineOptions = {\n  //               path: step.path,\n  //               strokeColor: options.strokeColor,\n  //               strokeOpacity: options.strokeOpacity,\n  //               strokeWeight: options.strokeWeight,\n  //             };\n\n  //             if (options.icons) {\n  //               polylineOptions.icons = options.icons;\n  //             }\n\n  //             self.drawPolyline(polylineOptions);\n  //             options.step(step, (route.legs[0].steps.length - 1));\n  //           });\n  //         }\n  //       }\n\n  //       // end callback\n  //       if (options.end) {\n  //         options.end(route);\n  //       }\n  //     },\n  //   });\n  // } else if (options.route) {\n  //   if (options.route.legs.length > 0) {\n  //     const { steps, } = options.route.legs[0];\n\n  //     steps.forEach((step, index) => {\n  //       // eslint-disable-next-line no-param-reassign\n  //       step.step_number = index;\n  //       // eslint-disable-next-line no-param-reassign\n  //       step.stepNumber = index;\n\n  //       const polylineOptions = {\n  //         path: step.path,\n  //         strokeColor: options.strokeColor,\n  //         strokeOpacity: options.strokeOpacity,\n  //         strokeWeight: options.strokeWeight,\n  //       };\n\n  //       if (options.icons) {\n  //         polylineOptions.icons = options.icons;\n  //       }\n\n  //       self.drawPolyline(polylineOptions);\n\n  //       options.step(step);\n  //     });\n  //   }\n  // }\n};\n\nclass Route {\n  constructor(options) {\n    this.origin = options.origin;\n    this.destination = options.destination;\n    this.waypoints = options.waypoints;\n\n    this.map = options.map;\n    this.route = options.route;\n    this.step_count = 0;\n    this.steps = this.route.legs[0].steps;\n    this.steps_length = this.steps.length;\n\n    const polylineOptions = {\n      path: new google.maps.MVCArray(),\n      strokeColor: options.strokeColor,\n      strokeOpacity: options.strokeOpacity,\n      strokeWeight: options.strokeWeight,\n    };\n\n    if (options.icons) {\n      polylineOptions.icons = options.icons;\n    }\n\n    this.polyline = this.map.drawPolyline(polylineOptions).getPath();\n  }\n\n  getRoute(options) {\n    const self = this;\n\n    this.map.getRoutes({\n      origin: this.origin,\n      destination: this.destination,\n      travelMode: options.travelMode,\n      waypoints: this.waypoints || [],\n      error: options.error,\n      callback(routes) {\n        // eslint-disable-next-line prefer-destructuring\n        self.route = routes[0];\n\n        if (options.callback) {\n          options.callback.call(self);\n        }\n      },\n    });\n  }\n\n  back() {\n    if (this.step_count > 0) {\n      this.step_count -= 1;\n      const { path, } = this.route.legs[0].steps[this.step_count];\n\n      path.forEach(() => this.polyline.pop());\n    }\n  }\n\n  forward() {\n    if (this.step_count < this.steps_length) {\n      const { path, } = this.route.legs[0].steps[this.step_count];\n\n      path.forEach(coordinate => this.polyline.push(coordinate));\n\n      this.step_count += 1;\n    }\n  }\n}\n\nGMaps.Route = Route;\n\nexport default GMaps;\n","import GMaps from './core';\nimport './events';\n\n/**\n * Extends GMaps to use custom Map Types.\n * @module MapTypes\n */\n\n/**\n * Draw a custom [tile-based map type](https://developers.google.com/maps/documentation/javascript/maptypes#ImageMapTypes) in the Map, which can be used with the base map types (`hybrid`, `roadmap`, `satellite` and `terrain`).\n * @function addMapType\n *\n * @param {string} mapTypeId - A simple identifier for the custom map type.\n * @param {object} options - The `options` object should contain:\n * @param {function} options.getTileUrl - A function that returns an URL for tile-based endpoints. It receives two arguments:\n *   * `points` (google.maps.Point): a point with `x` and `y` (is not a coordinate).\n *   * `zoom` (number): a zoom level.\n * @param {google.maps.Size} options.tileSize - The size of the tile.\n *\n * @returns {google.maps.ImageMapType}\n */\nGMaps.prototype.addMapType = function addMapType(mapTypeId, options = {}) {\n  const { getTileUrl, tileSize = new google.maps.Size(256, 256), } = options;\n\n  if (typeof getTileUrl !== 'function') {\n    throw new Error(\"'getTileUrl' function required.\");\n  }\n\n  const mapType = new google.maps.ImageMapType({ getTileUrl, tileSize, });\n\n  this.map.mapTypes.set(mapTypeId, mapType);\n\n  return mapType;\n};\n\n/**\n * Draw a custom [overlay map type](https://developers.google.com/maps/documentation/javascript/maptypes#OverlayMapTypes) in the Map. This method also fires an `overlay_map_type_added` event.\n * @function addOverlayMapType\n *\n * @param {string} mapTypeId - A simple identifier for the custom map type.\n * @param {object} options - The `options` object should contain:\n * @param {function} options.getTile - A function that returns a DOM Node. It receives three arguments:\n *   * `points` (google.maps.Point): a point with `x` and `y` (is not a coordinate).\n *   * `zoom` (number): a zoom level.\n *   * `ownerDocument` (Document): The DOM document that will create the node.\n * @param {number} options.index - The index for the overlay map type. Used to set differente z levels on stacked overlay maps.\n * @param {google.maps.Size} options.tileSize - The size of the tile.\n *\n * `options` also accepts any option defined in the [official documentation](https://developers.google.com/maps/documentation/javascript/reference#MapType).\n */\nGMaps.prototype.addOverlayMapType = function addOverlayMapType(options = {}) {\n  const { getTile, index = this.map.overlayMapTypes.length, ...overlayMapTypeOptions } = options;\n\n  if (typeof getTile !== 'function') {\n    throw new Error(\"'getTile' function required.\");\n  }\n\n  this.map.overlayMapTypes.insertAt(index, { ...overlayMapTypeOptions, getTile, });\n  GMaps.fire('overlay_map_type_added', this.map.overlayMapTypes[index], this);\n};\n\n/**\n * Remove a overlay map type from the map. This method also fires an `overlay_map_type_removed` event.\n * @function removeOverlayMapType\n *\n * @param {google.maps.Polyline} polyline - The polyline to be removed.\n */\nGMaps.prototype.removeOverlayMapType = function removeOverlayMapType(index) {\n  const overlayMapType = this.map.overlayMapTypes[index];\n\n  this.map.overlayMapTypes.removeAt(index);\n  GMaps.fire('overlay_map_type_removed', overlayMapType, this);\n};\n\nexport default GMaps;\n","import GMaps from './core';\n\n/**\n * Extends GMaps to add styled map types.\n * @module Styles\n */\n\n/**\n * Add a [styled map type](https://developers.google.com/maps/documentation/javascript/maptypes#StyledMaps) in the Map, which can be used with the base map types (`hybrid`, `roadmap`, `satellite` and `terrain`).\n * @function addStyle\n *\n * @param {object} options - The `options` object should contain:\n * @param {string} options.mapTypeId - A simple identifier for the styled map type.\n * @param {string} options.styledMapName - A name for the styled map type. It will be displayed in the map type control.\n * @param {array} options.styles - An array of (`MapTypeStyle`)[https://developers.google.com/maps/documentation/javascript/reference#MapTypeStyle] objects.\n */\nGMaps.prototype.addStyle = function addStyle(options) {\n  const styledMapType = new google.maps.StyledMapType(options.styles, { name: options.styledMapName, });\n\n  this.map.mapTypes.set(options.mapTypeId, styledMapType);\n};\n\n/**\n * Set a [styled map type](https://developers.google.com/maps/documentation/javascript/maptypes#StyledMaps) to the Map. The map type should be defined before with {@link GMaps#addStyle}.\n * @function setStyle\n *\n * @param {string} mapTypeId - The styled map type's identifier.\n */\nGMaps.prototype.setStyle = function setStyle(mapTypeId) {\n  this.map.setMapTypeId(mapTypeId);\n};\n\nexport default GMaps;\n","import GMaps from './core';\nimport './events';\nimport './controls';\nimport './geofences';\nimport './markers';\nimport './overlays';\nimport './geometry';\nimport './layers';\nimport './routes';\nimport './static';\nimport './map_types';\nimport './styles';\nimport './streetview';\nimport './polyfills';\nimport './utils';\n\nexport default GMaps;\n"],"sourceRoot":""}